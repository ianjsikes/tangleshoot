{
  "version": 3,
  "sources": ["../tangle/tangle_ts/src/room.ts", "../tangle/tangle_ts/src/message_encoding.ts", "../tangle/tangle_ts/src/rust_utilities.ts", "../tangle/tangle_ts/src/time_machine.ts", "../tangle/tangle_ts/src/tangle.ts", "../wasm/tangleshoot.js", "../random-name.ts", "../index.ts"],
  "sourcesContent": ["import { RustUtilities } from \"./rust_utilities\";\r\n\r\nexport interface RoomConfiguration {\r\n    server_url?: string,\r\n    room_name?: string,\r\n    ice_servers?: RTCIceServer[],\r\n    on_state_change?: (room_state: RoomState) => void;\r\n    on_peer_joined?: (peer_id: PeerId) => void;\r\n    on_peer_left?: (peer_id: PeerId, time: number) => void;\r\n    on_message?: (peer_id: PeerId, message: Uint8Array) => void;\r\n}\r\n\r\nexport type PeerId = number;\r\n\r\nexport enum RoomState {\r\n    Joining,\r\n    Connected,\r\n    Disconnected\r\n}\r\n\r\ntype Peer = {\r\n    id: PeerId,\r\n    connection: RTCPeerConnection,\r\n    data_channel: RTCDataChannel,\r\n    ready: boolean,\r\n    latest_message_data: Uint8Array\r\n    latest_message_offset: number,\r\n}\r\n\r\nenum MessageType {\r\n    MultiPartStart = 1,\r\n    MultiPartContinuation = 2,\r\n    SinglePart = 3,\r\n    SinglePartGzipped = 4,\r\n}\r\n\r\nconst MAX_MESSAGE_SIZE = 16_000;\r\n\r\n// TODO: This is generated by ChatGPT. Audit it.\r\nfunction compute_id_from_ip(ipAddress: string): number {\r\n    let uniqueNumber = 0;\r\n    const parts = ipAddress.split(':');\r\n    const ip = parts[0].split('.');\r\n    const port = parseInt(parts[1], 10);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n        uniqueNumber += parseInt(ip[i], 10) * Math.pow(256, 3 - i);\r\n    }\r\n    uniqueNumber += port;\r\n\r\n    return uniqueNumber;\r\n}\r\n\r\nexport class Room {\r\n    private _peers_to_join: Set<PeerId> = new Set();\r\n    private _current_state: RoomState = RoomState.Disconnected;\r\n    private _peers: Map<PeerId, Peer> = new Map();\r\n    private _configuration: RoomConfiguration = {};\r\n    private _outgoing_data_chunk = new Uint8Array(MAX_MESSAGE_SIZE + 5);\r\n    private _rust_utilities: RustUtilities;\r\n    private _server_socket?: WebSocket;\r\n\r\n    // Default to 1 because 0 conflicts with the 'system' ID.\r\n    my_id = 1;\r\n\r\n    // Used for testing\r\n    private _artificial_delay = 0;\r\n\r\n    constructor(rust_utilities: RustUtilities) {\r\n        this._rust_utilities = rust_utilities;\r\n    }\r\n\r\n    static async setup(_configuration: RoomConfiguration, rust_utilities: RustUtilities): Promise<Room> {\r\n        const room = new Room(rust_utilities);\r\n        await room._setup_inner(_configuration);\r\n        return room;\r\n    }\r\n\r\n    private message_peer_inner(peer: Peer, data: Uint8Array) {\r\n        if (!(peer.data_channel.readyState === \"open\")) {\r\n            // TODO: This could result in desyncs if this happens.\r\n            return;\r\n        }\r\n\r\n        // Gzip encode large messages.\r\n        // For very small messages Gzip encoding actually makes them bigger.\r\n        // This conditional is separate so that if the Gzip data is < MAX_MESSAGE_SIZE \r\n        // it becomes a small message.\r\n        let message_type = MessageType.SinglePart;\r\n        if (data.byteLength > MAX_MESSAGE_SIZE) {\r\n            message_type = MessageType.SinglePartGzipped;\r\n            data = this._rust_utilities.gzip_encode(data);\r\n        }\r\n\r\n        // If the message is too large fragment it. \r\n        // TODO: If there's not space in the outgoing channel push messages to an outgoing buffer.\r\n        if (data.byteLength > MAX_MESSAGE_SIZE) {\r\n            this._outgoing_data_chunk[0] = MessageType.MultiPartStart;\r\n            new DataView(this._outgoing_data_chunk.buffer).setUint32(1, data.byteLength);\r\n\r\n            this._outgoing_data_chunk.set(data.subarray(0, MAX_MESSAGE_SIZE), 5);\r\n            peer.data_channel.send(this._outgoing_data_chunk);\r\n\r\n            let data_offset = data.subarray(MAX_MESSAGE_SIZE);\r\n\r\n            while (data_offset.byteLength > 0) {\r\n                const length = Math.min(data_offset.byteLength, MAX_MESSAGE_SIZE);\r\n                this._outgoing_data_chunk[0] = MessageType.MultiPartContinuation;\r\n                this._outgoing_data_chunk.set(data_offset.subarray(0, length), 1);\r\n                data_offset = data_offset.subarray(length);\r\n\r\n                peer.data_channel.send(this._outgoing_data_chunk.subarray(0, length + 1));\r\n\r\n            }\r\n        } else {\r\n            this._outgoing_data_chunk[0] = message_type;\r\n            this._outgoing_data_chunk.set(data, 1);\r\n\r\n            peer.data_channel.send(this._outgoing_data_chunk.subarray(0, data.byteLength + 1));\r\n        }\r\n\r\n    }\r\n\r\n    send_message(data: Uint8Array, peer_id?: PeerId) {\r\n        if (peer_id) {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            const peer = this._peers.get(peer_id)!;\r\n            this.message_peer_inner(peer, data);\r\n        } else {\r\n            for (const peer of this._peers.values()) {\r\n                if (!peer.ready) {\r\n                    continue;\r\n                }\r\n\r\n                this.message_peer_inner(peer, data);\r\n            }\r\n        }\r\n    }\r\n\r\n    get_lowest_latency_peer(): PeerId | undefined {\r\n        // TODO: Implement this.\r\n        return this._peers.entries().next().value?.[0];\r\n    }\r\n\r\n    private async _setup_inner(room_configuration: RoomConfiguration) {\r\n        this._configuration = room_configuration;\r\n        this._configuration.server_url ??= \"tangle-server.fly.dev\";\r\n        this._configuration.room_name ??= \"\";\r\n\r\n        // TODO: Do not use metered's Turn servers\r\n        // Investigate routing traffic through Tangle's matchmaking server or other Tangle servers.\r\n        this._configuration.ice_servers ??= [\r\n            {\r\n                urls: \"stun:relay.metered.ca:80\",\r\n            },\r\n            {\r\n                urls: \"stun:stun1.l.google.com:19302\"\r\n            },\r\n            {\r\n                urls: \"turn:relay.metered.ca:80\",\r\n                username: \"acb3fd59dc274dbfd4e9ef21\",\r\n                credential: \"1zeDaNt7C85INfxl\",\r\n            },\r\n            {\r\n                urls: \"turn:relay.metered.ca:443\",\r\n                username: \"acb3fd59dc274dbfd4e9ef21\",\r\n                credential: \"1zeDaNt7C85INfxl\",\r\n            },\r\n            {\r\n                urls: \"turn:relay.metered.ca:443?transport=tcp\",\r\n                username: \"acb3fd59dc274dbfd4e9ef21\",\r\n                credential: \"1zeDaNt7C85INfxl\",\r\n            },\r\n        ];\r\n\r\n        const connect_to_server = () => {\r\n            const server_socket = new WebSocket(\"wss://\" + this._configuration.server_url);\r\n\r\n            let keep_alive_interval: number;\r\n\r\n            server_socket.onopen = () => {\r\n                console.log(\"[room] Connection established with server\");\r\n                console.log(\"[room] Requesting to join room: \", this._configuration.room_name);\r\n                server_socket.send(JSON.stringify({ 'join_room': this._configuration.room_name }));\r\n\r\n                // Poke the server every 10 seconds to ensure it doesn't drop our connection.\r\n                // Without this it seems browsers don't send WebSocket native 'pings' as expected.\r\n                // and some server providers (like fly.io) will shutdown inactive TCP sockets.\r\n                // This also gives the server a chance to disconnect peers that become unresponsive.\r\n                clearInterval(keep_alive_interval);\r\n                keep_alive_interval = setInterval(function () {\r\n                    server_socket.send(\"keep_alive\");\r\n                }, 10_000);\r\n            };\r\n\r\n            server_socket.onclose = (event) => {\r\n                if (this._current_state != RoomState.Disconnected) {\r\n                    clearInterval(keep_alive_interval);\r\n\r\n                    // Disconnecting from the WebSocket is considered a full disconnect from the room.\r\n\r\n                    // Call the on_peer_left handler for each peer\r\n                    for (const peer_id of this._peers.keys()) {\r\n                        this._configuration.on_peer_left?.(peer_id, Date.now());\r\n                    }\r\n\r\n                    this._current_state = RoomState.Disconnected;\r\n                    this._peers_to_join.clear();\r\n                    this._peers.clear();\r\n\r\n                    if (event.wasClean) {\r\n                        console.log(`[room] Server connection closed cleanly, code=${event.code} reason=${event.reason}`);\r\n                    } else {\r\n                        console.log(`[room] Server connection unexpectedly closed. code=${event.code} reason=${event.reason}`);\r\n                        console.log(\"event: \", event);\r\n                    }\r\n\r\n                    this._configuration.on_state_change?.(this._current_state);\r\n                }\r\n\r\n                // Attempt to reconnect\r\n                setTimeout(function () {\r\n                    console.log(\"[room] Attempting to reconnect to server...\")\r\n                    connect_to_server();\r\n                }, 250);\r\n            };\r\n\r\n            server_socket.onerror = function (error) {\r\n                console.log(`[room] Server socket error:`, error);\r\n                server_socket.close();\r\n            };\r\n\r\n            server_socket.onmessage = async (event) => {\r\n                const last_index = event.data.lastIndexOf('}');\r\n                const json = event.data.substring(0, last_index + 1);\r\n\r\n                const message = JSON.parse(json);\r\n                // peer_id is appended by the server to the end of incoming messages.\r\n                const peer_ip = event.data.substring(last_index + 1).trim();\r\n                const peer_id = compute_id_from_ip(peer_ip);\r\n\r\n                if (message.room_name) {\r\n                    /*\r\n                    const url = new URL(message.room_name);\r\n                    const location = document.location;\r\n                    if (url.href != location.href) {\r\n                        console.error(\"[room] Tried to join a room that doesn't match current host URL\");\r\n                        return;\r\n                    }\r\n                    */\r\n\r\n                    // Received when joining a room for the first time.\r\n                    console.log(\"[room] Entering room: \", message.room_name);\r\n\r\n                    this._current_state = RoomState.Joining;\r\n\r\n                    const peers_to_join_ids = message.peers.map(compute_id_from_ip);\r\n                    this._peers_to_join = new Set(peers_to_join_ids);\r\n\r\n                    this._configuration.on_state_change?.(this._current_state);\r\n\r\n                    // If we've already connected to a peer then remove it from _peers_to_join.\r\n                    for (const key of this._peers.keys()) {\r\n                        this._peers_to_join.delete(key);\r\n                    }\r\n                    this.check_if_joined();\r\n\r\n                    this.my_id = compute_id_from_ip(message.your_ip);\r\n                    console.log(\"[room] My id is: %d\", this.my_id);\r\n                } else if (message.join_room) {\r\n                    console.log(\"[room] Peer joining room: \", peer_id);\r\n                    this.make_rtc_peer_connection(peer_ip, peer_id, server_socket);\r\n                } else if (message.offer) {\r\n                    const peer_connection = this.make_rtc_peer_connection(peer_ip, peer_id, server_socket);\r\n                    await peer_connection.setRemoteDescription(new RTCSessionDescription(message.offer));\r\n                    const answer = await peer_connection.createAnswer();\r\n                    await peer_connection.setLocalDescription(answer);\r\n                    server_socket.send(JSON.stringify({ 'answer': answer, 'destination': peer_ip }));\r\n                } else if (message.answer) {\r\n                    const remoteDesc = new RTCSessionDescription(message.answer);\r\n                    await this._peers.get(peer_id)?.connection.setRemoteDescription(remoteDesc);\r\n                } else if (message.new_ice_candidate) {\r\n                    try {\r\n                        await this._peers.get(peer_id)?.connection.addIceCandidate(message.new_ice_candidate);\r\n                    } catch (e) {\r\n                        console.error(\"[room] Error adding received ice candidate\", e);\r\n                    }\r\n                } else if (message.disconnected_peer_id) {\r\n                    const disconnected_peer_id = compute_id_from_ip(message.disconnected_peer_id);\r\n                    console.log(\"[room] Peer left: \", disconnected_peer_id);\r\n                    this.remove_peer(disconnected_peer_id, message.time);\r\n                    this._peers_to_join.delete(disconnected_peer_id);\r\n                    this.check_if_joined();\r\n                }\r\n            };\r\n        };\r\n        connect_to_server();\r\n    }\r\n\r\n    private check_if_joined() {\r\n        if (this._current_state == RoomState.Joining && this._peers_to_join.size == 0) {\r\n            this._current_state = RoomState.Connected;\r\n            this._configuration.on_state_change?.(this._current_state);\r\n        }\r\n    }\r\n\r\n    private make_rtc_peer_connection(peer_ip: string, peer_id: PeerId, server_socket: WebSocket): RTCPeerConnection {\r\n        const peer_connection = new RTCPeerConnection({ 'iceServers': this._configuration.ice_servers });\r\n\r\n        // TODO: If this is swapped to a more unreliable UDP-like protocol then ordered and maxRetransmits should be set to false and 0.\r\n        //\r\n        // maxRetransmits: null is meant to be the default but explicitly setting it seems to trigger a Chrome\r\n        // bug where some packets are dropped.\r\n        // TODO: Report this bug.\r\n        const data_channel = peer_connection.createDataChannel(\"sendChannel\", { negotiated: true, id: 2, ordered: true });\r\n        data_channel.binaryType = \"arraybuffer\";\r\n\r\n        peer_connection.onicecandidate = event => {\r\n            console.log(\"[room] New ice candidate: \", event.candidate);\r\n            if (event.candidate) {\r\n                console.log(JSON.stringify({ 'new_ice_candidate': event.candidate, 'destination': peer_ip }));\r\n                server_socket.send(JSON.stringify({ 'new_ice_candidate': event.candidate, 'destination': peer_ip }));\r\n            }\r\n        };\r\n\r\n        peer_connection.onicecandidateerror = (event) => {\r\n            console.log(\"[room] Ice candidate error: \", event);\r\n        };\r\n\r\n        peer_connection.onnegotiationneeded = async () => {\r\n            console.log(\"[room] Negotiation needed\");\r\n            const offer = await peer_connection.createOffer();\r\n            await peer_connection.setLocalDescription(offer);\r\n            server_socket.send(JSON.stringify({ 'offer': offer, 'destination': peer_ip }));\r\n        };\r\n\r\n        peer_connection.onsignalingstatechange = () => {\r\n            console.log(\"[room] Signaling state changed: \", peer_connection.signalingState)\r\n        };\r\n\r\n        peer_connection.onconnectionstatechange = () => {\r\n            console.log(\"[room] Connection state changed: \", peer_connection.connectionState)\r\n        };\r\n\r\n        peer_connection.ondatachannel = (event) => {\r\n            peer.data_channel = event.channel;\r\n        };\r\n\r\n        data_channel.onopen = () => {\r\n            this._peers_to_join.delete(peer_id);\r\n            peer.ready = true;\r\n            this._configuration.on_peer_joined?.(peer_id);\r\n            this.check_if_joined();\r\n        }\r\n\r\n        data_channel.onmessage = (event) => {\r\n            // First check that this peer hasn't been officially disconnected.\r\n            if (this._peers.get(peer_id)) {\r\n                if (event.data.byteLength > 0) {\r\n                    // Defragment the message\r\n                    const message_data = new Uint8Array(event.data);\r\n                    switch (message_data[0]) {\r\n                        case MessageType.SinglePart: {\r\n                            // Call the user provided callback\r\n                            // Message received\r\n                            const data = message_data.subarray(1);\r\n\r\n                            // TODO: This introduces a potential one-frame delay on incoming events.\r\n                            setTimeout(() => {\r\n                                this._configuration.on_message?.(peer_id, data);\r\n                            }, this._artificial_delay);\r\n                            break;\r\n                        }\r\n                        case MessageType.SinglePartGzipped: {\r\n                            // Call the user provided callback\r\n                            const data = this._rust_utilities.gzip_decode(message_data.subarray(1));\r\n                            // TODO: This introduces a potential one-frame delay on incoming events.\r\n                            setTimeout(() => {\r\n                                this._configuration.on_message?.(peer_id, data);\r\n                            }, this._artificial_delay);\r\n                            break;\r\n                        }\r\n                        case MessageType.MultiPartStart: {\r\n                            const data = new DataView(message_data.buffer, 1);\r\n                            const length = data.getUint32(0);\r\n\r\n                            peer.latest_message_data = new Uint8Array(length);\r\n                            this.multipart_data_received(peer, message_data.subarray(5));\r\n                            break;\r\n                        }\r\n                        case MessageType.MultiPartContinuation: {\r\n                            this.multipart_data_received(peer, message_data.subarray(1));\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                console.error(\"DISCARDING MESSAGE FROM PEER: \", event.data);\r\n            }\r\n        }\r\n\r\n        const peer = { id: peer_id, connection: peer_connection, data_channel, ready: false, latest_message_data: new Uint8Array(0), latest_message_offset: 0 };\r\n        this._peers.set(peer_id, peer);\r\n        return peer_connection;\r\n    }\r\n\r\n    private multipart_data_received(peer: Peer, data: Uint8Array) {\r\n        peer.latest_message_data.set(data, peer.latest_message_offset);\r\n        peer.latest_message_offset += data.byteLength;\r\n\r\n        if (peer.latest_message_offset == peer.latest_message_data.length) {\r\n            let data = peer.latest_message_data;\r\n            data = this._rust_utilities.gzip_decode(data);\r\n\r\n            // TODO: This introduces a potential one-frame delay on incoming events.\r\n            // Message received\r\n            setTimeout(() => {\r\n                this._configuration.on_message?.(peer.id, data);\r\n            }, this._artificial_delay);\r\n            peer.latest_message_offset = 0;\r\n            peer.latest_message_data = new Uint8Array(0);\r\n        }\r\n    }\r\n\r\n    private remove_peer(peer_id: PeerId, time: number) {\r\n        const peer = this._peers.get(peer_id);\r\n\r\n        if (peer) {\r\n            peer.connection.close();\r\n            this._peers.delete(peer_id);\r\n            this._configuration.on_peer_left?.(peer_id, time);\r\n        }\r\n    }\r\n\r\n    disconnect() {\r\n        this._server_socket?.close();\r\n    }\r\n}\r\n\r\n", "import { WasmSnapshot, TimeStamp } from \"./time_machine\";\r\n\r\nenum NumberTag {\r\n    F64,\r\n    I64,\r\n}\r\n\r\nconst text_encoder = new TextEncoder();\r\nconst text_decoder = new TextDecoder();\r\n\r\nexport class MessageWriterReader {\r\n    output: Uint8Array;\r\n    data_view: DataView;\r\n    offset = 0;\r\n\r\n    constructor(output: Uint8Array) {\r\n        this.output = output;\r\n        this.data_view = new DataView(output.buffer, output.byteOffset);\r\n    }\r\n\r\n    get_result_array() {\r\n        return this.output.subarray(0, this.offset);\r\n    }\r\n\r\n    write_raw_bytes(bytes: Uint8Array) {\r\n        this.output.subarray(this.offset).set(bytes);\r\n        this.offset += bytes.length;\r\n    }\r\n\r\n    read_remaining_raw_bytes() {\r\n        return this.output.subarray(this.offset);\r\n    }\r\n\r\n    read_fixed_raw_bytes(length: number) {\r\n        const result = this.output.slice(this.offset, this.offset + length);\r\n        this.offset += length;\r\n        return result;\r\n    }\r\n\r\n    write_string(string: string) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const length = text_encoder.encodeInto(string, this.output.subarray(this.offset + 4)).written!;\r\n        this.data_view.setUint32(this.offset, length);\r\n        this.offset += length + 4;\r\n    }\r\n\r\n    read_string(): string {\r\n        const length = this.read_u32();\r\n        const result = text_decoder.decode(this.output.subarray(this.offset, this.offset + length));\r\n        this.offset += length;\r\n        return result;\r\n    }\r\n\r\n    write_u8(v: number) {\r\n        this.data_view.setUint8(this.offset, v);\r\n        this.offset += 1;\r\n    }\r\n\r\n    write_u16(v: number) {\r\n        this.data_view.setUint16(this.offset, v);\r\n        this.offset += 2;\r\n    }\r\n\r\n    write_u32(v: number) {\r\n        this.data_view.setUint32(this.offset, v);\r\n        this.offset += 4;\r\n    }\r\n\r\n    write_f32(v: number) {\r\n        this.data_view.setFloat32(this.offset, v);\r\n        this.offset += 4;\r\n    }\r\n\r\n    read_u8() {\r\n        const result = this.data_view.getUint8(this.offset);\r\n        this.offset += 1;\r\n        return result;\r\n    }\r\n\r\n    read_u16() {\r\n        const result = this.data_view.getUint16(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    }\r\n\r\n    read_u32() {\r\n        const result = this.data_view.getUint32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    }\r\n\r\n    read_f32() {\r\n        const result = this.data_view.getFloat32(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    }\r\n\r\n    read_f64() {\r\n        const result = this.data_view.getFloat64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    }\r\n\r\n    write_f64(v: number) {\r\n        this.data_view.setFloat64(this.offset, v);\r\n        this.offset += 8;\r\n    }\r\n\r\n    read_i64() {\r\n        const result = this.data_view.getBigInt64(this.offset);\r\n        this.offset += 8;\r\n        return result;\r\n    }\r\n\r\n    write_i64(v: bigint) {\r\n        this.data_view.setBigInt64(this.offset, v);\r\n        this.offset += 8;\r\n    }\r\n\r\n    write_tagged_number(number: number | bigint) {\r\n        if (typeof number == \"bigint\") {\r\n            this.write_u8(NumberTag.I64);\r\n            this.write_i64(number);\r\n        } else {\r\n            this.write_u8(NumberTag.F64);\r\n            this.write_f64(number);\r\n        }\r\n    }\r\n\r\n    read_tagged_number() {\r\n        const tag_byte = this.read_u8();\r\n        if (tag_byte === NumberTag.F64) {\r\n            return this.read_f64();\r\n        } else {\r\n            return this.read_i64();\r\n        }\r\n    }\r\n\r\n    write_wasm_snapshot(snapshot: WasmSnapshot): void {\r\n        this.write_time_stamp(snapshot.time_stamp);\r\n\r\n        const globals_count = snapshot.globals.length;\r\n        // Encode all mutable globals\r\n        this.write_u16(globals_count);\r\n        for (const value of snapshot.globals) {\r\n            this.write_u32(value[0]);\r\n            this.write_tagged_number(value[1] as number | bigint);\r\n        }\r\n        this.write_u32(snapshot.memory.byteLength);\r\n        this.write_raw_bytes(snapshot.memory);\r\n    }\r\n\r\n    read_wasm_snapshot(): WasmSnapshot {\r\n        const time_stamp = this.read_time_stamp();\r\n        const mutable_globals_length = this.read_u16();\r\n\r\n        const globals: Array<[number, unknown]> = [];\r\n        for (let i = 0; i < mutable_globals_length; i++) {\r\n            const index = this.read_u32();\r\n            const value = this.read_tagged_number();\r\n            globals.push([index, value]);\r\n        }\r\n\r\n        const bytes_length = this.read_u32();\r\n        const memory = this.read_fixed_raw_bytes(bytes_length);\r\n\r\n        return {\r\n            memory,\r\n            globals,\r\n            time_stamp,\r\n        };\r\n    }\r\n\r\n    write_time_stamp(time_stamp: TimeStamp) {\r\n        this.write_f64(time_stamp.time);\r\n        this.write_f64(time_stamp.player_id);\r\n    }\r\n\r\n    read_time_stamp(): TimeStamp {\r\n        return {\r\n            time: this.read_f64(),\r\n            player_id: this.read_f64()\r\n        }\r\n    }\r\n}\r\n", "import { MessageWriterReader } from \"./message_encoding\";\r\nimport { WasmSnapshot } from \"./time_machine\";\r\n\r\nconst decoder = new TextDecoder();\r\n\r\nexport class RustUtilities {\r\n    private _rust_utilities: WebAssembly.WebAssemblyInstantiatedSource;\r\n\r\n    constructor(rust_utilities: WebAssembly.WebAssemblyInstantiatedSource) {\r\n        this._rust_utilities = rust_utilities;\r\n    }\r\n\r\n    static async setup(): Promise<RustUtilities> {\r\n\r\n        const imports = {\r\n            env: {\r\n                external_log: function (pointer: number, length: number) {\r\n                    const memory = rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n                    const message_data = new Uint8Array(memory.buffer, pointer, length);\r\n                    const decoded_string = decoder.decode(new Uint8Array(message_data));\r\n                    console.log(decoded_string);\r\n                },\r\n                external_error: function (pointer: number, length: number) {\r\n                    const memory = rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n                    const message_data = new Uint8Array(memory.buffer, pointer, length);\r\n                    const decoded_string = decoder.decode(new Uint8Array(message_data));\r\n                    console.error(decoded_string);\r\n                },\r\n            }\r\n        };\r\n        console.log(import.meta);\r\n\r\n        const url = new URL(import.meta.url);\r\n        const url_without_file = url.origin + url.pathname.substring(0, url.pathname.lastIndexOf(\"/\") + 1);\r\n        const final_url = new URL(\"rust_utilities.wasm\", url_without_file);\r\n\r\n        const binary = await fetch(final_url)\r\n            .then((response) => response.arrayBuffer());\r\n\r\n        // TODO: instantiateStreaming would be better here but I was having issues with the mime-type when\r\n        // hosting on CloudFlare. Investigation needed.\r\n        const rust_utilities = await WebAssembly.instantiate(binary, imports);\r\n        return new RustUtilities(rust_utilities);\r\n    }\r\n\r\n    gzip_decode(data_to_decode: Uint8Array) {\r\n        const memory = this._rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n        const instance = this._rust_utilities.instance.exports;\r\n\r\n        const pointer = (instance.reserve_space as CallableFunction)(data_to_decode.byteLength);\r\n        const destination = new Uint8Array(memory.buffer, pointer, data_to_decode.byteLength);\r\n        destination.set(data_to_decode);\r\n\r\n        (instance.gzip_decode as CallableFunction)();\r\n        const result_pointer = new Uint32Array(memory.buffer, pointer, 2);\r\n        const result_data = new Uint8Array(memory.buffer, result_pointer[0], result_pointer[1]);\r\n        return new Uint8Array(result_data);\r\n    }\r\n\r\n\r\n    // TODO: These are just helpers and aren't that related to the rest of the code in this:\r\n    gzip_encode(data_to_compress: Uint8Array) {\r\n        const memory = this._rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n        const exports = this._rust_utilities.instance.exports;\r\n\r\n        const pointer = (exports.reserve_space as CallableFunction)(data_to_compress.byteLength);\r\n        const destination = new Uint8Array(memory.buffer, pointer, data_to_compress.byteLength);\r\n        destination.set(new Uint8Array(data_to_compress));\r\n\r\n        (exports.gzip_encode as CallableFunction)();\r\n        const result_pointer = new Uint32Array(memory.buffer, pointer, 2);\r\n        const result_data = new Uint8Array(memory.buffer, result_pointer[0], result_pointer[1]);\r\n        // console.log(\"COMPRESSED LENGTH: \", result_data.byteLength);\r\n        // console.log(\"COMPRESSION RATIO: \", data_to_compress.byteLength / result_data.byteLength);\r\n        return result_data;\r\n    }\r\n\r\n    hash_data(...data_to_hash: Array<Uint8Array>): Uint8Array {\r\n        let byteLength = 0;\r\n        for (const data of data_to_hash) {\r\n            byteLength += data.byteLength;\r\n        }\r\n\r\n        const memory = this._rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n        const instance = this._rust_utilities.instance.exports;\r\n\r\n        const pointer = (instance.reserve_space as CallableFunction)(byteLength);\r\n\r\n        let offset = 0;\r\n        for (const data of data_to_hash) {\r\n            const destination = new Uint8Array(memory.buffer, pointer + offset, data.byteLength);\r\n            destination.set(new Uint8Array(data));\r\n            offset += data.byteLength;\r\n        }\r\n        (instance.xxh3_128_bit_hash as CallableFunction)();\r\n        const hashed_result = new Uint8Array(new Uint8Array(memory.buffer, pointer, 16));\r\n        return hashed_result;\r\n    }\r\n\r\n    hash_snapshot(wasm_snapshot: WasmSnapshot): Uint8Array {\r\n        const header = new Uint8Array(2 + wasm_snapshot.globals.length * (4 + 9));\r\n        const writer = new MessageWriterReader(header);\r\n\r\n        const globals_count = wasm_snapshot.globals.length;\r\n\r\n        // Encode all mutable globals\r\n        writer.write_u16(globals_count);\r\n        for (const value of wasm_snapshot.globals) {\r\n            writer.write_u32(value[0]);\r\n            writer.write_tagged_number(value[1] as number | bigint);\r\n        }\r\n\r\n        const result = this.hash_data(writer.get_result_array(), new Uint8Array(wasm_snapshot.memory.buffer));\r\n        return result;\r\n    }\r\n\r\n    process_binary(wasm_binary: Uint8Array, export_globals: boolean, track_changes: boolean) {\r\n        if (!(export_globals || track_changes)) {\r\n            return wasm_binary;\r\n        }\r\n\r\n        const length = wasm_binary.byteLength;\r\n        const pointer = (this._rust_utilities.instance.exports.reserve_space as CallableFunction)(length);\r\n\r\n        const memory = this._rust_utilities.instance.exports.memory as WebAssembly.Memory;\r\n\r\n        const data_location = new Uint8Array(memory.buffer, pointer, length);\r\n        data_location.set(new Uint8Array(wasm_binary));\r\n        (this._rust_utilities.instance.exports.prepare_wasm as CallableFunction)(export_globals, track_changes);\r\n\r\n        // TODO: Write these to an output buffer instead of having two calls for them.\r\n        const output_ptr = (this._rust_utilities.instance.exports.get_output_ptr as CallableFunction)();\r\n        const output_len = (this._rust_utilities.instance.exports.get_output_len as CallableFunction)();\r\n        const output_wasm = new Uint8Array(memory.buffer, output_ptr, output_len);\r\n        return output_wasm;\r\n    }\r\n}", "import { MessageWriterReader } from \"./message_encoding\";\r\nimport { RustUtilities } from \"./rust_utilities\";\r\n\r\nconst WASM_PAGE_SIZE = 65536;\r\n\r\nexport type TimeStamp = {\r\n    time: number,\r\n    player_id: number,\r\n};\r\n\r\nexport function time_stamp_compare(a: TimeStamp, b: TimeStamp): number {\r\n    let v = Math.sign(a.time - b.time);\r\n    if (v != 0) {\r\n        return v;\r\n    }\r\n\r\n    v = Math.sign(a.player_id - b.player_id);\r\n    if (v != 0) {\r\n        return v;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nexport type FunctionCall = {\r\n    //name: string,\r\n    function_export_index: number,\r\n    args: Array<number>,\r\n    time_stamp: TimeStamp,\r\n    hash?: Uint8Array\r\n};\r\n\r\nexport type WasmSnapshot = {\r\n    memory: Uint8Array,\r\n    // The index in the exports and the value to set the export to\r\n    globals: Array<[number, unknown]>,\r\n    time_stamp: TimeStamp\r\n}\r\n\r\ntype Event = FunctionCall;\r\nconst decoder = new TextDecoder();\r\n\r\n// Used for debugging\r\nlet action_log = \"\";\r\nconst debug_mode = false;\r\n\r\nexport class TimeMachine {\r\n    _fixed_update_interval?: number;\r\n\r\n    private _current_simulation_time: TimeStamp = { time: 0, player_id: 0 };\r\n    private _fixed_update_time = 0;\r\n    private _target_time = 0;\r\n\r\n    private _need_to_rollback_to_time?: TimeStamp;\r\n\r\n    private _events: Array<Event> = [];\r\n    private _snapshots: Array<WasmSnapshot> = [];\r\n\r\n    _wasm_instance: WebAssembly.WebAssemblyInstantiatedSource;\r\n    private _imports: WebAssembly.Imports = {};\r\n\r\n    private _global_indices: Array<number> = [];\r\n    private _exports: Array<WebAssembly.ExportValue> = [];\r\n    private _export_keys: Array<string> = [];\r\n\r\n    // To facilitate simpler storage, serialization, and networking function calls\r\n    // are associated with an index instead of a string.\r\n    private _function_name_to_index: Map<string, number> = new Map();\r\n    private _fixed_update_index: number | undefined;\r\n\r\n    rust_utilities: RustUtilities\r\n\r\n    private constructor(wasm_instance: WebAssembly.WebAssemblyInstantiatedSource, rust_utilities: RustUtilities) {\r\n        this._wasm_instance = wasm_instance;\r\n        this._exports = Object.values(wasm_instance.instance.exports);\r\n        this._export_keys = Object.keys(wasm_instance.instance.exports);\r\n        this.rust_utilities = rust_utilities;\r\n    }\r\n\r\n    static async setup(wasm_binary: Uint8Array, imports: WebAssembly.Imports, fixed_update_interval?: number): Promise<TimeMachine> {\r\n        const rust_utilities = await RustUtilities.setup();\r\n\r\n        // TODO: These imports are for AssemblyScript, but they should be optional\r\n        // or part of a more fleshed-out strategy for how to manage imports.\r\n        {\r\n            imports.env ??= {};\r\n\r\n            imports.env.abort ??= () => {\r\n                console.log(\"Ignoring call to abort\");\r\n            };\r\n            imports.env.seed ??= () => {\r\n                // TODO: Add more entropy\r\n                return 14;\r\n            };\r\n        }\r\n        let external_log: (a: number, b: number) => void = () => { console.log(\"Not implemented\") };\r\n        imports.env.external_log ??= (a: number, b: number) => external_log(a, b);\r\n\r\n\r\n        wasm_binary = rust_utilities.process_binary(wasm_binary, true, false);\r\n        const wasm_instance = await WebAssembly.instantiate(wasm_binary, imports);\r\n\r\n        const time_machine = new TimeMachine(wasm_instance, rust_utilities);\r\n\r\n        console.log(\"[tangle] Heap size: \", (wasm_instance.instance.exports.memory as WebAssembly.Memory).buffer.byteLength);\r\n\r\n        // TODO: Think more about what 'standard library' Wasm should be provided.\r\n        external_log = (pointer: number, length: number) => {\r\n            const memory = time_machine._wasm_instance.instance.exports.memory as WebAssembly.Memory;\r\n            const message_data = new Uint8Array(memory.buffer, pointer, length);\r\n            const decoded_string = decoder.decode(new Uint8Array(message_data));\r\n            console.log(decoded_string);\r\n        };\r\n\r\n        // When a module is setup call its main function immediately.\r\n        // This may only be useful for Rust.\r\n        // {\r\n        //     const main = wasm_instance.instance.exports[\"main\"];\r\n        //     if (main) {\r\n        //         (main as CallableFunction)();\r\n        //     }\r\n        // }\r\n\r\n        time_machine._imports = imports;\r\n        time_machine._fixed_update_interval = fixed_update_interval;\r\n\r\n        let j = 0;\r\n        for (const key of Object.keys(wasm_instance.instance.exports)) {\r\n            if (key.slice(0, 3) == \"wg_\") {\r\n                time_machine._global_indices.push(j);\r\n            }\r\n\r\n            time_machine._function_name_to_index.set(key, j);\r\n            if (key == \"fixed_update\") {\r\n                time_machine._fixed_update_index = j;\r\n            }\r\n            j += 1;\r\n        }\r\n\r\n        // Default to 60 frame-per second if unspecified.\r\n        // If there's no \"fixed_update\" function do not generate 'fixed_update' calls.\r\n        if (time_machine._fixed_update_index !== undefined) {\r\n            time_machine._fixed_update_interval ??= 1000 / 60;\r\n        } else {\r\n            time_machine._fixed_update_interval = undefined;\r\n        }\r\n\r\n        // This ensures the first message is slightly into the future.\r\n\r\n        time_machine._snapshots = [time_machine._get_wasm_snapshot()];\r\n\r\n        console.log(\"\uD83D\uDE80\u23F3 Time Machine Activated \u23F3\uD83D\uDE80\");\r\n        return time_machine;\r\n    }\r\n\r\n    read_memory(address: number, length: number): Uint8Array {\r\n        return new Uint8Array(new Uint8Array((this._wasm_instance.instance.exports.memory as WebAssembly.Memory).buffer, address, length));\r\n    }\r\n\r\n    read_string(address: number, length: number): string {\r\n        const message_data = this.read_memory(address, length);\r\n        const decoded_string = decoder.decode(new Uint8Array(message_data));\r\n        return decoded_string;\r\n    }\r\n\r\n    get_function_export_index(function_name: string): number | undefined {\r\n        return this._function_name_to_index.get(function_name);\r\n    }\r\n\r\n    get_function_name(function_index: number): string | undefined {\r\n        return this._export_keys[function_index];\r\n    }\r\n\r\n    /// Returns the function call of this instance.\r\n    async call_with_time_stamp(function_export_index: number, args: Array<number>, time_stamp: TimeStamp) {\r\n        if (time_stamp_compare(time_stamp, this._snapshots[0].time_stamp) == -1) {\r\n            // TODO: This is an error. It's no longer possible to add events in the past.\r\n            // Report a desync here.\r\n            console.error(\"[tangle error] Attempting to rollback to before earliest safe time\");\r\n            console.error(\"Event Time: \", time_stamp);\r\n            console.error(\"Earlieset Snapshot Time: \", this._snapshots[0].time_stamp);\r\n            throw new Error(\"[tangle error] Attempting to rollback to before earliest safe time\");\r\n        }\r\n\r\n        // To avoid excessive reordering insert recurring function calls that\r\n        // will occur before this function call.\r\n        this._progress_recurring_function_calls(time_stamp.time);\r\n\r\n        let i = this._events.length - 1;\r\n        outer_loop:\r\n        for (; i >= 0; i -= 1) {\r\n            switch (time_stamp_compare(this._events[i].time_stamp, time_stamp)) {\r\n                case -1:\r\n                    // This is where we should insert.\r\n                    break outer_loop;\r\n                case 1:\r\n                    break;\r\n                case 0: {\r\n                    const event = this._events[i];\r\n                    if (function_export_index != event.function_export_index || !(array_equals(args, event.args))) {\r\n                        // This shouldn't happen, but if it does we can safely ignore it and move on.\r\n                        console.error(\"[tangle warning] Attempted to call a function with a duplicate time stamp.\");\r\n                        console.log(\"Event Time: \", time_stamp);\r\n                        console.log(\"Function name: \", this.get_function_name(function_export_index));\r\n                    }\r\n                    // If this event is a duplicate but is exactly the same as an existing event we can safely ignore it.\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (time_stamp_compare(time_stamp, this._current_simulation_time) == -1) {\r\n            // Make sure to rollback to the furthest point in the past that's required. \r\n            if (this._need_to_rollback_to_time === undefined || time_stamp_compare(time_stamp, this._need_to_rollback_to_time) == -1) {\r\n                // This will cause a rollback next time `simulate_forward` is called.\r\n                this._need_to_rollback_to_time = time_stamp;\r\n            }\r\n        }\r\n\r\n        const event = {\r\n            function_export_index,\r\n            args,\r\n            time_stamp,\r\n        };\r\n        // Insert after the found insertion point.\r\n        this._events.splice(i + 1, 0, event);\r\n\r\n        if (debug_mode) {\r\n            action_log += `Inserting call ${i + 1} ${event.time_stamp.time} ${event.time_stamp.player_id} ${this.get_function_name(event.function_export_index)}\\n`\r\n        }\r\n    }\r\n\r\n    /// Call a function but ensure its results do not persist and cannot cause a desync.\r\n    /// This can be used for things like drawing or querying from the Wasm\r\n    async call_and_revert(function_export_index: number, args: Array<number>) {\r\n        const f = this._exports[function_export_index] as CallableFunction;\r\n\r\n        if (f) {\r\n            const snapshot = this._get_wasm_snapshot();\r\n            (f as CallableFunction)(...args);\r\n            await this._apply_snapshot(snapshot);\r\n        }\r\n    }\r\n\r\n    private _progress_recurring_function_calls(target_time: number) {\r\n        if (this._fixed_update_interval !== undefined && this._fixed_update_index !== undefined) {\r\n            // Add `fixed_update` calls that go into the future.\r\n            while (target_time > this._fixed_update_time) {\r\n                this.call_with_time_stamp(this._fixed_update_index, [], { time: this._fixed_update_time, player_id: 0 });\r\n                this._fixed_update_time += this._fixed_update_interval;\r\n            }\r\n        }\r\n    }\r\n\r\n    target_time(): number {\r\n        return this._target_time;\r\n    }\r\n\r\n    // This is used in scenarios where a peer falls too far behind in a simulation. \r\n    // This lets them have normal visuals until they resync.\r\n    set_target_time(time: number) {\r\n        this._target_time = time;\r\n    }\r\n\r\n    current_simulation_time(): number {\r\n        return this._current_simulation_time.time;\r\n    }\r\n\r\n    /// This lets the simulation run further into the future.\r\n    /// No functions are actually called yet, that's the responsibility of `step`\r\n    progress_time(time: number) {\r\n        this._target_time += time;\r\n        this._progress_recurring_function_calls(this._target_time);\r\n    }\r\n\r\n    /// Simulates one function step forward and returns if there's more work to do.\r\n    /// This gives the calling context an opportunity to manage how much CPU-time is consumed.\r\n    /// Call this is in a loop and if it returns true continue. \r\n    step(): boolean {\r\n        if (this._need_to_rollback_to_time !== undefined) {\r\n            // Perform a rollback here.\r\n\r\n            if (debug_mode) {\r\n                action_log += `Target rollback time: ${this._need_to_rollback_to_time.time} ${this._need_to_rollback_to_time.player_id}\\n`;\r\n            }\r\n            // Apply the most recent snapshot.\r\n            let i = this._snapshots.length - 1;\r\n            for (; i >= 0; --i) {\r\n                if (time_stamp_compare(this._need_to_rollback_to_time, this._snapshots[i].time_stamp) != -1) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            const snap_shot = this._snapshots[i];\r\n            this._apply_snapshot(snap_shot);\r\n\r\n            // Remove future snapshots\r\n            this._snapshots.splice(i, this._snapshots.length - i);\r\n\r\n            if (debug_mode) {\r\n                action_log += `Rolling back to: ${snap_shot.time_stamp.time} ${snap_shot.time_stamp.player_id}\\n`;\r\n            }\r\n\r\n            // Begin simulation from the event that occurred after the snapshot rolled back to.\r\n            this._current_simulation_time = snap_shot.time_stamp;\r\n            this._need_to_rollback_to_time = undefined;\r\n        }\r\n\r\n        let i = this._events.length - 1;\r\n        for (; i >= 0; --i) {\r\n            if (time_stamp_compare(this._events[i].time_stamp, this._current_simulation_time) != 1) {\r\n                break;\r\n            }\r\n        }\r\n        i += 1;\r\n\r\n        const function_call = this._events[i];\r\n        if (function_call !== undefined && function_call.time_stamp.time <= this._target_time) {\r\n            const f = this._exports[function_call.function_export_index] as CallableFunction;\r\n\r\n            f(...function_call.args);\r\n\r\n            if (debug_mode) {\r\n                function_call.hash = this.hash_wasm_state();\r\n            }\r\n\r\n            if (action_log) {\r\n                const event = function_call;\r\n                action_log += `i ${event.time_stamp.time} ${event.time_stamp.player_id} ${this.get_function_name(event.function_export_index)} ${event.hash}\\n`\r\n            }\r\n\r\n            this._current_simulation_time = function_call.time_stamp;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Take a snapshot. This provides a point in time to rollback to.\r\n    // This should be called after significant computation has been performed.\r\n    take_snapshot() {\r\n        let i = this._events.length - 1;\r\n        for (; i >= 0; --i) {\r\n            const compare = time_stamp_compare(this._events[i].time_stamp, this._current_simulation_time);\r\n            if (compare == -1) {\r\n                return;\r\n            }\r\n            if (compare == 0) {\r\n                this._snapshots.push(this._get_wasm_snapshot());\r\n                // There is no need to store the function anymore after this, so remove it from the events array.\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    remove_history_before(time: number) {\r\n        if (debug_mode) {\r\n            return;\r\n        }\r\n\r\n        // Remove all events and snapshots that occurred before this time.\r\n        // Progress the safe time. \r\n        // Always leave at least one snapshot to rollback to.\r\n\r\n        let i = 0;\r\n        // To ensure there's always atleast one snapshot to rollback to:\r\n        // this._snapshots.length - 1 \r\n        for (; i < this._snapshots.length - 1; ++i) {\r\n            if (this._snapshots[i].time_stamp.time >= time) {\r\n                break;\r\n            }\r\n        }\r\n        i -= 1;\r\n        this._snapshots.splice(0, i);\r\n\r\n        // Remove all events that occurred before the latest snapshot.\r\n        let j = 0;\r\n        for (; j < this._events.length; ++j) {\r\n            if (time_stamp_compare(this._events[j].time_stamp, this._snapshots[0].time_stamp) != -1) {\r\n                break;\r\n            }\r\n        }\r\n        j -= 1;\r\n        this._events.splice(0, j);\r\n    }\r\n\r\n    // `deep` specifies if the memory is deep-copied for this snapshot. \r\n    private _get_wasm_snapshot(deep = true): WasmSnapshot {\r\n        const globals: Array<[number, unknown]> = [];\r\n\r\n        const export_values = Object.values(this._wasm_instance.instance.exports);\r\n        for (const index of this._global_indices) {\r\n            globals.push([index, (export_values[index] as WebAssembly.Global).value]);\r\n        }\r\n\r\n        let memory = new Uint8Array((this._wasm_instance.instance.exports.memory as WebAssembly.Memory).buffer);\r\n        if (deep) {\r\n            memory = new Uint8Array(memory);\r\n        }\r\n\r\n        // console.log(\"TOTAL SIZE: \", this._snapshots.length * memory.byteLength);\r\n\r\n        return {\r\n            // This nested Uint8Array constructor creates a deep copy.\r\n            memory,\r\n            globals,\r\n            time_stamp: this._current_simulation_time\r\n        };\r\n    }\r\n\r\n    private async _apply_snapshot(snapshot: WasmSnapshot) {\r\n        this._assign_memory(snapshot.memory);\r\n\r\n        const values = Object.values(this._wasm_instance.instance.exports);\r\n\r\n        for (let j = 0; j < snapshot.globals.length; j++) {\r\n            (values[snapshot.globals[j][0]] as WebAssembly.Global).value = snapshot.globals[j][1];\r\n        }\r\n    }\r\n\r\n    private async _assign_memory(new_memory_data: Uint8Array) {\r\n        const mem = this._wasm_instance?.instance.exports.memory as WebAssembly.Memory;\r\n        let page_diff = (new_memory_data.byteLength - mem.buffer.byteLength) / WASM_PAGE_SIZE;\r\n\r\n        // The only way to \"shrink\" a Wasm instance is to construct an entirely new \r\n        // one with a new memory.\r\n        // Hopefully Wasm gets a better way to shrink instances in the future.\r\n\r\n        if (page_diff < 0) {\r\n            const old_instance = this._wasm_instance.instance;\r\n            this._wasm_instance.instance = await WebAssembly.instantiate(this._wasm_instance.module, this._imports);\r\n            page_diff = (new_memory_data.byteLength - (this._wasm_instance?.instance.exports.memory as WebAssembly.Memory).buffer.byteLength) / WASM_PAGE_SIZE;\r\n\r\n            // Copy over all globals during the resize.\r\n            for (const [key, v] of Object.entries(old_instance.exports)) {\r\n                if (key.slice(0, 3) == \"wg_\") {\r\n                    (this._wasm_instance.instance.exports[key] as WebAssembly.Global).value = v;\r\n                }\r\n            }\r\n\r\n            // TODO: Copy mutable Wasm tables as well.\r\n        }\r\n\r\n        const old_memory = this._wasm_instance?.instance.exports.memory as WebAssembly.Memory;\r\n        if (page_diff > 0) {\r\n            old_memory.grow(page_diff);\r\n        }\r\n        new Uint8Array(old_memory.buffer).set(new_memory_data);\r\n    }\r\n\r\n    encode(first_byte: number): Uint8Array {\r\n        console.log(\"[time-machine] Encoding with hash: \", this.hash_wasm_state());\r\n\r\n        // For bandwidth / performance reasons only send encode\r\n        // the earliest safe snapshot and all subsequent events.\r\n        // It's up to the decoding TimeMachine to catchup.\r\n        const snapshot = this._snapshots[0];\r\n\r\n        let size = 1 + 8 * 4 + 4 + (4 + 8 + 8 + 1) * this._events.length;\r\n        for (const event of this._events) {\r\n            size += event.args.length * 8;\r\n        }\r\n        size += 8 + 8 + 2 + (4 + 9) * snapshot.globals.length;\r\n        size += 4 + snapshot.memory.buffer.byteLength;\r\n\r\n        const writer = new MessageWriterReader(new Uint8Array(size));\r\n\r\n        writer.write_u8(first_byte);\r\n\r\n        // Encode _earliest_safe_time\r\n        // Encode _fixed_update_time\r\n        // Encode _target_time\r\n        // Encode _next_run_event_index\r\n        // Encode _events\r\n        // Encode _snapshot\r\n\r\n        writer.write_f64(this._fixed_update_time);\r\n        writer.write_f64(this._target_time);\r\n        writer.write_time_stamp(snapshot.time_stamp);\r\n\r\n        // Encode events\r\n        writer.write_u32(this._events.length);\r\n        for (const event of this._events) {\r\n            writer.write_u32(event.function_export_index);\r\n            writer.write_time_stamp(event.time_stamp);\r\n            writer.write_u8(event.args.length);\r\n            for (const arg of event.args) {\r\n                writer.write_f64(arg);\r\n            }\r\n        }\r\n\r\n        // Encode the snapshot\r\n        writer.write_wasm_snapshot(snapshot);\r\n\r\n        // Debugging\r\n        console.log(\"[time-machine] Hash of sent snapshot: \", this.rust_utilities.hash_snapshot(snapshot));\r\n\r\n        return writer.get_result_array();\r\n    }\r\n\r\n    decode_and_apply(reader: MessageWriterReader) {\r\n        this._fixed_update_time = reader.read_f64();\r\n        this._target_time = reader.read_f64();\r\n        this._current_simulation_time = reader.read_time_stamp();\r\n\r\n        const events_length = reader.read_u32();\r\n        this._events = new Array(events_length);\r\n\r\n        let last_time_stamp = {\r\n            time: -1,\r\n            player_id: 0,\r\n        };\r\n        for (let i = 0; i < events_length; ++i) {\r\n            const function_export_index = reader.read_u32();\r\n            const time_stamp = reader.read_time_stamp();\r\n\r\n            const args_length = reader.read_u8();\r\n            const args = new Array(args_length);\r\n            for (let j = 0; j < args_length; ++j) {\r\n                args[j] = reader.read_f64();\r\n            }\r\n            this._events[i] = {\r\n                function_export_index,\r\n                time_stamp,\r\n                args,\r\n            };\r\n\r\n            if (!(time_stamp_compare(last_time_stamp, time_stamp) == -1)) {\r\n                console.error(\"[time-machine] Error: Incoming time stamps out of order\");\r\n            }\r\n            last_time_stamp = time_stamp;\r\n        }\r\n\r\n        const wasm_snapshot = reader.read_wasm_snapshot();\r\n\r\n        // Evaluate if WasmSnapshot really needs to have a TimeStamp.\r\n        this._apply_snapshot(wasm_snapshot);\r\n        this._snapshots = [wasm_snapshot];\r\n\r\n        console.log(\"[time-machine] Decoded with hash: \", this.hash_wasm_state());\r\n    }\r\n\r\n    hash_wasm_state(): Uint8Array {\r\n        return this.rust_utilities.hash_snapshot(this._get_wasm_snapshot(false));\r\n    }\r\n\r\n    print_history() {\r\n        let history = \"\";\r\n        let previous_time_stamp = { time: -1, player_id: 0 };\r\n        for (const event of this._events) {\r\n            if (time_stamp_compare(previous_time_stamp, event.time_stamp) != -1) {\r\n                history += \"ERROR: OUT OF ORDER TIMESTAMPS\\n\";\r\n            }\r\n            history += `${event.time_stamp.time} ${event.time_stamp.player_id} ${this.get_function_name(event.function_export_index)} ${event.hash}\\n`\r\n            previous_time_stamp = event.time_stamp;\r\n        }\r\n        console.log(action_log);\r\n        console.log(history);\r\n    }\r\n\r\n}\r\n\r\nfunction array_equals(a: number[], b: number[]) {\r\n    return a.length === b.length &&\r\n        a.every((val, index) => val === b[index]);\r\n}\r\n", "import { PeerId, Room, RoomState } from \"./room.js\";\r\nimport { TimeMachine, FunctionCall } from \"./time_machine\";\r\nimport { RustUtilities } from \"./rust_utilities.js\";\r\nimport { MessageWriterReader } from \"./message_encoding.js\";\r\n\r\nexport { RoomState, PeerId } from \"./room.js\";\r\n\r\nenum MessageType {\r\n    WasmCall,\r\n    TimeProgressed,\r\n    RequestState,\r\n    SetProgram,\r\n    SetHeap,\r\n    // Used to figure out roundtrip time.\r\n    Ping,\r\n    Pong\r\n}\r\n\r\ntype PeerData = {\r\n    last_received_message: number,\r\n    round_trip_time: number,\r\n    // When the current time was measured\r\n    estimated_current_time_measurement: number,\r\n    // Based on round trip latency this is an estimate of the remote peer's perceived current time.\r\n    estimated_current_time?: number\r\n}\r\n\r\nexport enum TangleState {\r\n    Disconnected,\r\n    Connected,\r\n    RequestingHeap\r\n}\r\n\r\ntype TangleConfiguration = {\r\n    fixed_update_interval?: number;\r\n    accept_new_programs?: boolean,\r\n    room_name?: string,\r\n    ice_servers?: RTCIceServer[],\r\n    room_server?: string,\r\n    on_state_change_callback?: (state: TangleState, tangle: Tangle) => void\r\n}\r\n\r\ntype InstantiatedTangle = {\r\n    instance: {\r\n        // TODO: More explicit types, don't use `any`\r\n        exports: Record<string, any>,\r\n    },\r\n    tangle: Tangle\r\n}\r\n\r\nclass UserIdType { }\r\nexport const UserId = new UserIdType();\r\n\r\nconst ROUND_TRIP_TIME_ROLLING_AVERAGE_ALPHA = 0.9;\r\n\r\nexport class Tangle {\r\n    private _room!: Room;\r\n    private _time_machine!: TimeMachine;\r\n    private _rust_utilities: RustUtilities;\r\n\r\n    private _buffered_messages: Array<FunctionCall> = [];\r\n    private _peer_data: Map<PeerId, PeerData> = new Map();\r\n    private _tangle_state = TangleState.Disconnected;\r\n    private _current_program_binary = new Uint8Array();\r\n    private _block_reentrancy = false;\r\n    private _enqueued_inner_calls: Array<() => void> = [];\r\n    private _last_performance_now?: number;\r\n    private _configuration: TangleConfiguration = {};\r\n    private _outgoing_message_buffer = new Uint8Array(500);\r\n\r\n    private _message_time_offset = 0;\r\n\r\n    private _last_sent_message = 0;\r\n    private _in_call_that_will_be_reverted = false;\r\n\r\n    // private _debug_enabled = true;\r\n\r\n    static async instantiate(source: ArrayBuffer, importObject?: WebAssembly.Imports | undefined, tangle_configuration?: TangleConfiguration): Promise<InstantiatedTangle> {\r\n        tangle_configuration ??= {};\r\n        tangle_configuration.accept_new_programs ??= false;\r\n\r\n        const wasm_binary = new Uint8Array(source);\r\n\r\n        importObject ??= {};\r\n\r\n        // Wrap all imports so that they can't return a value, which would cause desyncs.\r\n        // This may need more thought in the future because it's a big limitation.\r\n        // if (importObject) {\r\n        //     Object.values(importObject).forEach((moduleImports) => {\r\n        //         Object.entries(moduleImports).forEach(([importName, importValue]) => {\r\n        //             if (typeof importValue === 'function') {\r\n        //                 moduleImports[importName] = function (...args: any) {\r\n        //                     const r = importValue(...args);\r\n        //                     // This call will be reverted so it's OK if it causes a temporary desync.\r\n        //                     if (this._in_call_that_will_be_reverted) {\r\n        //                         return r;\r\n        //                     }\r\n        //                     if (r !== undefined) {\r\n        //                         console.log(\"[tangle warning] Tangle prevents WebAssembly imports from returning values because those values are unique per-peer and would cause a desync.\")\r\n        //                     }\r\n        //                 };\r\n        //             }\r\n        //         });\r\n        //     });\r\n        // }\r\n\r\n        const time_machine = await TimeMachine.setup(wasm_binary, importObject, tangle_configuration.fixed_update_interval);\r\n\r\n        const tangle = new Tangle(time_machine);\r\n        tangle._configuration = tangle_configuration;\r\n        const exports = await tangle.setup_inner(tangle_configuration.room_name, wasm_binary);\r\n        return {\r\n            instance: {\r\n                exports\r\n            },\r\n            tangle: tangle\r\n        };\r\n    }\r\n\r\n    static async instantiateStreaming(source: Response | PromiseLike<Response>, importObject?: WebAssembly.Imports | undefined, tangle_configuration?: TangleConfiguration): Promise<InstantiatedTangle> {\r\n        source = await source;\r\n        const binary = await source.arrayBuffer();\r\n        return Tangle.instantiate(new Uint8Array(binary), importObject, tangle_configuration);\r\n    }\r\n\r\n    constructor(time_machine: TimeMachine) {\r\n        this._time_machine = time_machine;\r\n        this._rust_utilities = time_machine.rust_utilities;\r\n    }\r\n\r\n    private _change_state(state: TangleState) {\r\n        if (this._tangle_state != state) {\r\n            if (state == TangleState.Connected) {\r\n                console.log(\"\uD83C\uDF31 Tangle State: \", TangleState[state]);\r\n                console.log(\"Learn more about Tangle at https://tanglesync.com\");\r\n                this._last_performance_now = performance.now();\r\n            }\r\n            this._tangle_state = state;\r\n            this._configuration.on_state_change_callback?.(state, this);\r\n        }\r\n        this._tangle_state = state\r\n    }\r\n\r\n    private async setup_inner(room_name: string | undefined, wasm_binary: Uint8Array): Promise<Record<string, any>> {\r\n        room_name ??= document.location.href;\r\n\r\n        // Append a hash of the binary so that peers won't join rooms without matching binaries.\r\n        const hash = this._rust_utilities.hash_data(wasm_binary);\r\n        room_name += hash.join(\"\");\r\n\r\n        const room_configuration = {\r\n            server_url: this._configuration.room_server,\r\n            ice_servers: this._configuration.ice_servers,\r\n            room_name,\r\n            on_peer_joined: (peer_id: PeerId) => {\r\n                this._peer_data.set(peer_id, {\r\n                    last_received_message: 0,\r\n                    round_trip_time: 0,\r\n                    estimated_current_time_measurement: 0,\r\n                    estimated_current_time: undefined\r\n                });\r\n                this._room.send_message(this._encode_ping_message(), peer_id);\r\n            },\r\n            on_peer_left: (peer_id: PeerId) => {\r\n                this._run_inner_function(async () => {\r\n                    this._peer_data.delete(peer_id);\r\n\r\n                    // TODO: This is a terrible way to handle peer disconnects.\r\n                    // It has many potential unhandled edge-cases, but will work most of the time for now.\r\n\r\n                    // Only one peer in the room will issue a `peer_left` event.\r\n                    let closest_peer = this._room.my_id;\r\n                    let peer_distance = this._room.my_id - peer_id;\r\n\r\n                    for (const peer of this._peer_data.keys()) {\r\n                        const diff = peer - peer_id;\r\n                        if (diff != 0 && diff < peer_distance) {\r\n                            closest_peer = peer;\r\n                            peer_distance = diff;\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"[tangle] calling 'peer_left'\");\r\n                    if (closest_peer == this._room.my_id) {\r\n                        this.call(\"peer_left\", peer_id);\r\n                    }\r\n                });\r\n            },\r\n            on_state_change: (state: RoomState) => {\r\n                this._run_inner_function(async () => {\r\n                    console.log(\"[tangle] Room state changed: \", RoomState[state]);\r\n\r\n                    switch (state) {\r\n                        case RoomState.Connected: {\r\n                            this._request_heap();\r\n\r\n                            if (this._peer_data.size == 0) {\r\n                                // We have no peer so we're connected\r\n                                this._change_state(TangleState.Connected);\r\n                            }\r\n                            break;\r\n                        }\r\n                        case RoomState.Disconnected: {\r\n                            this._change_state(TangleState.Disconnected);\r\n                            break;\r\n                        }\r\n                        case RoomState.Joining: {\r\n                            this._change_state(TangleState.Disconnected);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                });\r\n            },\r\n            on_message: async (peer_id: PeerId, message: Uint8Array) => {\r\n                const peer_connected_already = this._peer_data.get(peer_id);\r\n\r\n                this._run_inner_function(async () => {\r\n                    // Ignore messages from peers that have disconnected. \r\n                    // TODO: Evaluate if this could cause desyncs.\r\n                    const peer = this._peer_data.get(peer_id);\r\n                    if (!peer) {\r\n                        console.log(\"[tangle] Rejected message from unconnected peer: \", peer_id);\r\n                        return;\r\n                    }\r\n\r\n                    const message_type = message[0];\r\n                    const message_data = message.subarray(1);\r\n\r\n                    switch (message_type) {\r\n                        case (MessageType.TimeProgressed): {\r\n                            const time = this._decode_time_progressed_message(message_data);\r\n                            peer.last_received_message = time;\r\n                            break;\r\n                        }\r\n                        case (MessageType.WasmCall): {\r\n                            const m = this._decode_wasm_call_message(message_data);\r\n                            peer.last_received_message = m.time;\r\n\r\n                            const time_stamp = {\r\n                                time: m.time,\r\n                                player_id: peer_id\r\n                            };\r\n\r\n                            if (this._tangle_state == TangleState.RequestingHeap) {\r\n                                this._buffered_messages.push({\r\n                                    function_export_index: m.function_index,\r\n                                    time_stamp: time_stamp,\r\n                                    args: m.args\r\n                                });\r\n                            } else {\r\n                                console.log(\"[tangle] Remote Wasm call: \", this._time_machine.get_function_name(m.function_index));\r\n                                await this._time_machine.call_with_time_stamp(m.function_index, m.args, time_stamp);\r\n                                if (!(this._time_machine._fixed_update_interval)) {\r\n                                    this.progress_time();\r\n                                }\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                        case (MessageType.RequestState): {\r\n                            // TODO: Check that this is a fully loaded peer.\r\n                            const heap_message = this._time_machine.encode(MessageType.SetHeap);\r\n                            this._room.send_message(heap_message);\r\n                            break;\r\n                        }\r\n                        case (MessageType.SetHeap): {\r\n                            if (this._tangle_state != TangleState.Connected) {\r\n                                console.log(\"[tangle] Applying TimeMachine state from peer\");\r\n\r\n                                const round_trip_time = peer.round_trip_time;\r\n                                console.log(\"[tangle] Approximate round trip offset: \", round_trip_time / 2);\r\n                                this._time_machine.decode_and_apply(new MessageWriterReader(message_data));\r\n\r\n                                // Apply any messages that were received as we were waiting for this to load.\r\n                                for (const m of this._buffered_messages) {\r\n                                    await this._time_machine.call_with_time_stamp(m.function_export_index, m.args, m.time_stamp);\r\n                                }\r\n                                this._buffered_messages = [];\r\n\r\n                                // Progress the target time to approximately catch up to the remote peer.\r\n                                this._time_machine.progress_time(round_trip_time / 2);\r\n\r\n                                this._change_state(TangleState.Connected);\r\n                            }\r\n                            break;\r\n                        }\r\n                        case (MessageType.Ping): {\r\n                            const writer = new MessageWriterReader(this._outgoing_message_buffer);\r\n                            writer.write_u8(MessageType.Pong);\r\n                            writer.write_raw_bytes(message_data);\r\n                            // Send the average of the peers current times\r\n                            // This should help peers converge on a common sense of time.\r\n                            writer.write_f64(this._average_current_time(performance.now()));\r\n                            this._room.send_message(writer.get_result_array(), peer_id);\r\n                            break;\r\n                        }\r\n                        case (MessageType.Pong): {\r\n                            // TODO: Check that the peer hasn't messed with this message's time.\r\n                            const { time_sent, current_time } = this._decode_pong_message(message_data);\r\n                            const new_round_trip_time = Date.now() - time_sent;\r\n                            if (peer.round_trip_time == 0) {\r\n                                peer.round_trip_time = new_round_trip_time;\r\n                            } else {\r\n                                peer.round_trip_time = peer.round_trip_time\r\n                                    * ROUND_TRIP_TIME_ROLLING_AVERAGE_ALPHA\r\n                                    + (1.0 - ROUND_TRIP_TIME_ROLLING_AVERAGE_ALPHA) * new_round_trip_time;\r\n                            }\r\n                            peer.estimated_current_time = current_time + peer.round_trip_time / 2;\r\n                            peer.estimated_current_time_measurement = performance.now();\r\n                            break;\r\n                        }\r\n                    }\r\n                }, !peer_connected_already);\r\n            }\r\n        };\r\n\r\n        this._room = await Room.setup(room_configuration, this._rust_utilities);\r\n        this._current_program_binary = wasm_binary;\r\n\r\n        const export_object: Record<string, any> = {};\r\n        for (const key of Object.keys(this._time_machine._wasm_instance.instance.exports)) {\r\n            const e = this._time_machine._wasm_instance.instance.exports[key];\r\n            if (typeof e === 'function') {\r\n                const wrapped_function = (...args: any) => {\r\n                    this.call(key, ...args);\r\n                };\r\n                wrapped_function.callAndRevert = (...args: any) => {\r\n                    this._in_call_that_will_be_reverted = true;\r\n                    this.call_and_revert(key, ...args);\r\n                    this._in_call_that_will_be_reverted = false;\r\n                };\r\n                export_object[key] = wrapped_function;\r\n            }\r\n        }\r\n        return export_object;\r\n    }\r\n\r\n    private async _run_inner_function(f: () => void, enqueue_condition = false) {\r\n        if (!this._block_reentrancy && !enqueue_condition) {\r\n            this._block_reentrancy = true;\r\n            await f();\r\n            let f1 = this._enqueued_inner_calls.shift();\r\n            while (f1) {\r\n                await f1();\r\n                f1 = this._enqueued_inner_calls.shift();\r\n            }\r\n            this._block_reentrancy = false;\r\n        } else {\r\n            this._enqueued_inner_calls.push(f);\r\n        }\r\n    }\r\n\r\n    private _request_heap() {\r\n        // Ask an arbitrary peer for the heap\r\n        const lowest_latency_peer = this._room.get_lowest_latency_peer();\r\n        if (lowest_latency_peer) {\r\n            this._change_state(TangleState.RequestingHeap);\r\n            this._room.send_message(this._encode_ping_message(), lowest_latency_peer);\r\n            this._room.send_message(this._encode_request_heap_message(), lowest_latency_peer);\r\n        }\r\n    }\r\n\r\n    private _encode_wasm_call_message(function_index: number, time: number, args: Array<number> /*, hash?: Uint8Array*/): Uint8Array {\r\n        const message_writer = new MessageWriterReader(this._outgoing_message_buffer);\r\n        message_writer.write_u8(MessageType.WasmCall);\r\n\r\n        message_writer.write_u32(function_index);\r\n        message_writer.write_f64(time);\r\n        message_writer.write_u8(args.length);\r\n\r\n\r\n        // Encode args. \r\n        // TODO: For now all args are encoded as f64s, but that is incorrect.\r\n        for (let i = 0; i < args.length; i++) {\r\n            message_writer.write_f64(args[i]);\r\n        }\r\n\r\n        /*\r\n        if (this._debug_enabled) {\r\n            message_writer.write_raw_bytes(hash!);\r\n        }\r\n        */\r\n\r\n        return this._outgoing_message_buffer.subarray(0, message_writer.offset);\r\n    }\r\n\r\n    private _decode_wasm_call_message(data: Uint8Array) {\r\n        const message_reader = new MessageWriterReader(data);\r\n\r\n        const function_index = message_reader.read_u32();\r\n        const time = message_reader.read_f64();\r\n        const args_length = message_reader.read_u8();\r\n\r\n        const args = new Array<number>(args_length);\r\n        for (let i = 0; i < args.length; i++) {\r\n            args[i] = message_reader.read_f64();\r\n        }\r\n\r\n        let hash;\r\n\r\n        /*\r\n        let hash;\r\n        if (this._debug_enabled) {\r\n            hash = message_reader.read_fixed_raw_bytes(16);\r\n        }\r\n        */\r\n\r\n        return {\r\n            function_index,\r\n            time,\r\n            args,\r\n            hash\r\n        };\r\n    }\r\n\r\n    private _encode_time_progressed_message(time_progressed: number): Uint8Array {\r\n        const message_writer = new MessageWriterReader(this._outgoing_message_buffer);\r\n        message_writer.write_u8(MessageType.TimeProgressed);\r\n        message_writer.write_f64(time_progressed);\r\n        return message_writer.get_result_array();\r\n    }\r\n\r\n    private _decode_time_progressed_message(data: Uint8Array) {\r\n        return new DataView(data.buffer, data.byteOffset).getFloat64(0);\r\n    }\r\n\r\n    private _encode_request_heap_message(): Uint8Array {\r\n        this._outgoing_message_buffer[0] = MessageType.RequestState;\r\n        return this._outgoing_message_buffer.subarray(0, 1);\r\n    }\r\n\r\n    private _encode_ping_message(): Uint8Array {\r\n        const writer = new MessageWriterReader(this._outgoing_message_buffer);\r\n        writer.write_u8(MessageType.Ping);\r\n        writer.write_f64(Date.now());\r\n        return writer.get_result_array();\r\n    }\r\n\r\n    private _decode_pong_message(data: Uint8Array): { time_sent: number, current_time: number } {\r\n        const reader = new MessageWriterReader(data);\r\n        const time_sent = reader.read_f64();\r\n        const current_time = reader.read_f64();\r\n        return { time_sent, current_time }\r\n    }\r\n\r\n    private _process_args(args: Array<number | UserIdType>): Array<number> {\r\n        return args.map((a) => {\r\n            if (a instanceof UserIdType) {\r\n                return this._room.my_id;\r\n            } else {\r\n                return a;\r\n            }\r\n        });\r\n    }\r\n\r\n    private _median_round_trip_latency(): number | undefined {\r\n        const latencies = Array.from(this._peer_data.values()).map((peer) => peer.round_trip_time).sort();\r\n        return latencies[Math.floor(latencies.length / 2)];\r\n    }\r\n\r\n    call(function_name: string, ...args: Array<number | UserIdType>) {\r\n        this._run_inner_function(async () => {\r\n\r\n            // TODO: Only process the args like this for local calls.\r\n            // Let remote calls insert the ID themselves\r\n            // As-is this design makes it trivial for peers to spoof each-other.\r\n            const args_processed = this._process_args(args);\r\n\r\n            // TODO: This is very arbitrary. \r\n            // TODO: This trusts the high-latency peer to be well-behaved, there should be a way for the room to enforce this.\r\n            // This adds some latency to very laggy peers to make rollbacks less likely.\r\n            let median_round_trip_latency = this._median_round_trip_latency();\r\n            if (median_round_trip_latency === undefined || median_round_trip_latency < 60) {\r\n                median_round_trip_latency = 0;\r\n            }\r\n            median_round_trip_latency = Math.min(median_round_trip_latency, 150);\r\n\r\n            // Ensure that a message is not sent with a timestamp prior to a previously sent message.\r\n            // If this client has high-latency add input latency to reduce the rollback jank for peers.\r\n            const message_time = Math.max(this._last_sent_message, this._time_machine.target_time() + median_round_trip_latency) + this._message_time_offset;\r\n\r\n            const time_stamp = {\r\n                time: message_time,\r\n                player_id: this._room.my_id\r\n            };\r\n\r\n            // Ensure events each have a unique timestamp.\r\n            // In practice this tiny offset should be of no consequence.\r\n            this._message_time_offset += .0001;\r\n\r\n            const function_index = this._time_machine.get_function_export_index(function_name);\r\n            if (function_index !== undefined) {\r\n                await this._time_machine.call_with_time_stamp(function_index, args_processed, time_stamp);\r\n\r\n                // Do not send events to the room if we're not yet fully connected.\r\n                if (this._tangle_state == TangleState.Connected) {\r\n                    // Network the call\r\n                    // TODO: These ping messages do not need to be sent so frequently or can be bundled with other messages.\r\n                    this._room.send_message(this._encode_ping_message());\r\n                    this._room.send_message(this._encode_wasm_call_message(function_index, time_stamp.time, args_processed));\r\n                }\r\n\r\n                this._last_sent_message = Math.max(this._last_sent_message, time_stamp.time);\r\n\r\n            }\r\n        });\r\n\r\n        this.progress_time();\r\n    }\r\n\r\n    /// This call will have no impact but can be useful to draw or query from the world.\r\n    call_and_revert(function_name: string, ...args: Array<number>) {\r\n        this.progress_time();\r\n\r\n        this._run_inner_function(async () => {\r\n            const args_processed = this._process_args(args);\r\n            const function_index = this._time_machine.get_function_export_index(function_name);\r\n            if (function_index) {\r\n                this._time_machine.call_and_revert(function_index, args_processed);\r\n            }\r\n        });\r\n    }\r\n\r\n    /// Resync with the room, immediately catching up.\r\n    resync() {\r\n        this._run_inner_function(() => {\r\n            this._request_heap();\r\n        });\r\n    }\r\n\r\n    progress_time() {\r\n        this._run_inner_function(async () => {\r\n            await this._progress_time_inner();\r\n        });\r\n    }\r\n\r\n    private async _progress_time_inner() {\r\n        const performance_now = performance.now();\r\n\r\n        if (this._last_performance_now) {\r\n            const average_current_time = this._average_current_time(performance_now);\r\n            const difference_from_peers = average_current_time - this.current_time(performance_now);\r\n\r\n            let time_progressed = performance_now - this._last_performance_now + difference_from_peers;\r\n\r\n            // Time cannot flow backwards.\r\n            time_progressed = Math.max(time_progressed, 0.001);\r\n\r\n            const check_for_resync = true;\r\n            // Only check for resync if we're connected to the room.\r\n            if (check_for_resync && this._tangle_state == TangleState.Connected) {\r\n                // If the client is the threshold behind assume they need to be resynced.\r\n                const time_diff = (this._time_machine.target_time() + time_progressed) - this._time_machine.current_simulation_time();\r\n                if (this._time_machine._fixed_update_interval !== undefined && time_diff > 3000) {\r\n                    time_progressed = this._time_machine._fixed_update_interval;\r\n\r\n                    if (this._peer_data.size > 0) {\r\n                        console.log(\"[tangle] Fallen behind, reloading room\");\r\n                        console.log(\"Fallen behind amount: \", time_diff);\r\n\r\n                        // TODO: Resync with the same peers instead of reload.\r\n                        // It should be seamless to come back to a tab and rejoin a room.\r\n                        location.reload();\r\n                    } else {\r\n                        console.log(\"[tangle] Fallen behind but this is a single-player session, so ignoring this\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            await this._time_machine.progress_time(time_progressed);\r\n\r\n            const time_budget = time_progressed * 0.7;\r\n            const time_here = performance.now();\r\n\r\n            while (this._time_machine.step()) {\r\n                // TODO: A better heuristic for when snapshots should be taken.\r\n                // They could be taken after a set amount of computational overhead.\r\n                // Taking a snapshot here is extremely costly!\r\n                this._time_machine.take_snapshot();\r\n                if ((performance.now() - time_here) > time_budget) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Remove history that's safe to remove.\r\n\r\n            // Keep track of when a message was received from each peer\r\n            // and use that to determine what history is safe to throw away.\r\n            let earliest_safe_memory = this._time_machine.current_simulation_time();\r\n\r\n            if (this._tangle_state == TangleState.Connected) {\r\n                for (const value of this._peer_data.values()) {\r\n                    earliest_safe_memory = Math.min(earliest_safe_memory, value.last_received_message);\r\n                }\r\n\r\n                const KEEP_ALIVE_THRESHOLD = 200;\r\n                const current_time = this._time_machine.target_time();\r\n                const difference = (current_time - this._last_sent_message);\r\n                if (difference > KEEP_ALIVE_THRESHOLD) {\r\n                    // TODO: These ping messages do not need to be sent so frequently or can be bundled with other messages.\r\n                    this._room.send_message(this._encode_ping_message());\r\n                    this._room.send_message(this._encode_time_progressed_message(current_time));\r\n                }\r\n            }\r\n\r\n            this._time_machine.remove_history_before(earliest_safe_memory);\r\n\r\n            if (time_progressed > 0) {\r\n                this._message_time_offset = 0.0001;\r\n            }\r\n        }\r\n\r\n        this._last_performance_now = performance_now;\r\n    }\r\n\r\n    _average_current_time(now: number): number {\r\n        let current_time = this._time_machine.target_time();\r\n        if (this._last_performance_now) {\r\n            current_time += now - this._last_performance_now;\r\n        }\r\n\r\n        let count = 1;\r\n        if (this._tangle_state == TangleState.Connected) {\r\n            for (const peer of this._peer_data.values()) {\r\n                if (peer.estimated_current_time) {\r\n                    current_time += peer.estimated_current_time + (now - peer.estimated_current_time_measurement);\r\n                    count += 1;\r\n                }\r\n            }\r\n        }\r\n        current_time = current_time / count;\r\n        return current_time;\r\n    }\r\n\r\n    current_time(now: number): number {\r\n        let time = this._time_machine.target_time();\r\n        if (this._last_performance_now) {\r\n            time += now - this._last_performance_now;\r\n        }\r\n        return time;\r\n    }\r\n\r\n    read_memory(address: number, length: number): Uint8Array {\r\n        return this._time_machine.read_memory(address, length);\r\n    }\r\n    read_string(address: number, length: number): string {\r\n        return this._time_machine.read_string(address, length);\r\n    }\r\n\r\n    print_history() {\r\n        this._time_machine.print_history();\r\n    }\r\n}\r\n\r\n", "import { Tangle } from '../tangle/tangle_ts/src/index';\nconst lAudioContext = (typeof AudioContext !== 'undefined' ? AudioContext : (typeof webkitAudioContext !== 'undefined' ? webkitAudioContext : undefined));\nlet tangle;\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(tangle._time_machine._wasm_instance.instance.exports.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(tangle._time_machine._wasm_instance.instance.exports.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(tangle._time_machine._wasm_instance.instance.exports.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                tangle._time_machine._wasm_instance.instance.exports.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_34(arg0, arg1) {\n    tangle._time_machine._wasm_instance.instance.exports._dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hd5f5c26d8d9598f9(arg0, arg1);\n}\n\nfunction __wbg_adapter_37(arg0, arg1, arg2) {\n    tangle._time_machine._wasm_instance.instance.exports._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h02fbbe34bb05a4ed(arg0, arg1, addHeapObject(arg2));\n}\n\nfunction __wbg_adapter_54(arg0, arg1) {\n    tangle._time_machine._wasm_instance.instance.exports._dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h536915ecfde7be24(arg0, arg1);\n}\n\nfunction __wbg_adapter_57(arg0, arg1, arg2) {\n    tangle._time_machine._wasm_instance.instance.exports._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__ha90a6027cae409b3(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n*/\nexport function start() {\n    tangle._time_machine._wasm_instance.instance.exports.start();\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        tangle._time_machine._wasm_instance.instance.exports.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet cachedFloat32Memory0 = null;\n\nfunction getFloat32Memory0() {\n    if (cachedFloat32Memory0 === null || cachedFloat32Memory0.byteLength === 0) {\n        cachedFloat32Memory0 = new Float32Array(tangle._time_machine._wasm_instance.instance.exports.memory.buffer);\n    }\n    return cachedFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction getArrayI32FromWasm0(ptr, len) {\n    return getInt32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(tangle._time_machine._wasm_instance.instance.exports.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayU32FromWasm0(ptr, len) {\n    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction notDefined(what) { return () => { throw new Error(`${what} is not defined`); }; }\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof Tangle.instantiateStreaming === 'function') {\n            try {\n                return await Tangle.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`Tangle.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `Tangle.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await Tangle.instantiate(bytes, imports);\n\n    } else {\n        const instance = await Tangle.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_is_null = function(arg0) {\n        const ret = getObject(arg0) === null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_c9486ca5d8e2cbe8 = function(arg0, arg1) {\n        try {\n            console.log(getStringFromWasm0(arg0, arg1));\n        } finally {\n            tangle._time_machine._wasm_instance.instance.exports.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbg_log_aba5996d9bde071f = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        try {\n            console.log(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3), getStringFromWasm0(arg4, arg5), getStringFromWasm0(arg6, arg7));\n        } finally {\n            tangle._time_machine._wasm_instance.instance.exports.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbg_mark_40e050a77cc39fea = function(arg0, arg1) {\n        performance.mark(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_measure_aa7a73f17813f708 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        try {\n            performance.measure(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        } finally {\n            tangle._time_machine._wasm_instance.instance.exports.__wbindgen_free(arg0, arg1);\n            tangle._time_machine._wasm_instance.instance.exports.__wbindgen_free(arg2, arg3);\n        }\n    }, arguments) };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        try {\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            tangle._time_machine._wasm_instance.instance.exports.__wbindgen_free(arg0, arg1);\n        }\n    };\n    imports.wbg.__wbg_randomFillSync_6894564c2c334c42 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_805f1c3d65988a5a = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_crypto_e1d53a1d73fb10b8 = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_process_038c26bf42b093f8 = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_ab37218d2f0b24a8 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_080f4b19d15bc1fe = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_msCrypto_6e7d3e1f92610cbb = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_require_78a3dcfbdba9cbce = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_WebGl2RenderingContext_61bb2cb23346dbb7 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof WebGL2RenderingContext;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_beginQuery_fb152d8d84f2b130 = function(arg0, arg1, arg2) {\n        getObject(arg0).beginQuery(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindBufferRange_f2c529259df5358e = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).bindBufferRange(arg1 >>> 0, arg2 >>> 0, getObject(arg3), arg4, arg5);\n    };\n    imports.wbg.__wbg_bindSampler_6eb88b542e5a410f = function(arg0, arg1, arg2) {\n        getObject(arg0).bindSampler(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindVertexArray_8b71290041cb6746 = function(arg0, arg1) {\n        getObject(arg0).bindVertexArray(getObject(arg1));\n    };\n    imports.wbg.__wbg_blitFramebuffer_86eee8a5763ded5e = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {\n        getObject(arg0).blitFramebuffer(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 >>> 0, arg10 >>> 0);\n    };\n    imports.wbg.__wbg_bufferData_573e61c49a480c4d = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferData(arg1 >>> 0, arg2, arg3 >>> 0);\n    };\n    imports.wbg.__wbg_bufferData_16f948547d74c866 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferData(arg1 >>> 0, getObject(arg2), arg3 >>> 0);\n    };\n    imports.wbg.__wbg_bufferSubData_c7180c0b681078e8 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferSubData(arg1 >>> 0, arg2, getObject(arg3));\n    };\n    imports.wbg.__wbg_clearBufferfi_95daf829c568e58a = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).clearBufferfi(arg1 >>> 0, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_clearBufferfv_b3c90fbed3b74920 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).clearBufferfv(arg1 >>> 0, arg2, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_clearBufferiv_fe2a00a8f8fb7322 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).clearBufferiv(arg1 >>> 0, arg2, getArrayI32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_clearBufferuiv_a41730a8d84c6ac6 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).clearBufferuiv(arg1 >>> 0, arg2, getArrayU32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_clientWaitSync_ae8f3712f85a57fb = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).clientWaitSync(getObject(arg1), arg2 >>> 0, arg3 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_compressedTexSubImage2D_23b602b828848fb7 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        getObject(arg0).compressedTexSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8, arg9);\n    };\n    imports.wbg.__wbg_compressedTexSubImage2D_d6c95fc640a9f4de = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        getObject(arg0).compressedTexSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, getObject(arg8));\n    };\n    imports.wbg.__wbg_compressedTexSubImage3D_00b794917e65d559 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11) {\n        getObject(arg0).compressedTexSubImage3D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 >>> 0, arg10, arg11);\n    };\n    imports.wbg.__wbg_compressedTexSubImage3D_c9c7b42e0f7db586 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) {\n        getObject(arg0).compressedTexSubImage3D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 >>> 0, getObject(arg10));\n    };\n    imports.wbg.__wbg_copyBufferSubData_c903618a0e0a9fca = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).copyBufferSubData(arg1 >>> 0, arg2 >>> 0, arg3, arg4, arg5);\n    };\n    imports.wbg.__wbg_copyTexSubImage3D_88fc9e1c56d3e7db = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        getObject(arg0).copyTexSubImage3D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);\n    };\n    imports.wbg.__wbg_createSampler_d1255ae3836b1bee = function(arg0) {\n        const ret = getObject(arg0).createSampler();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createVertexArray_de7292bbd7ea02dd = function(arg0) {\n        const ret = getObject(arg0).createVertexArray();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_deleteQuery_0981fb4d492e46a7 = function(arg0, arg1) {\n        getObject(arg0).deleteQuery(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteSampler_6d832d1900eafbea = function(arg0, arg1) {\n        getObject(arg0).deleteSampler(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteSync_f8f026807b7eee54 = function(arg0, arg1) {\n        getObject(arg0).deleteSync(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteVertexArray_dc4f1b2e5ac93f24 = function(arg0, arg1) {\n        getObject(arg0).deleteVertexArray(getObject(arg1));\n    };\n    imports.wbg.__wbg_drawArraysInstanced_1222b6236d008088 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).drawArraysInstanced(arg1 >>> 0, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_drawBuffers_3223f0aeb44f7057 = function(arg0, arg1) {\n        getObject(arg0).drawBuffers(getObject(arg1));\n    };\n    imports.wbg.__wbg_drawElementsInstanced_b4714f8dd90fd2a8 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).drawElementsInstanced(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n    };\n    imports.wbg.__wbg_endQuery_726967da9d5d1ca7 = function(arg0, arg1) {\n        getObject(arg0).endQuery(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_fenceSync_fb3e1185847ee462 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).fenceSync(arg1 >>> 0, arg2 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_framebufferTextureLayer_e644333b8ec36f9d = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).framebufferTextureLayer(arg1 >>> 0, arg2 >>> 0, getObject(arg3), arg4, arg5);\n    };\n    imports.wbg.__wbg_getBufferSubData_cd8138c86821bca3 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).getBufferSubData(arg1 >>> 0, arg2, getObject(arg3));\n    };\n    imports.wbg.__wbg_getIndexedParameter_5f5c79f6c05edd18 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).getIndexedParameter(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getQueryParameter_e0f43fb85f793bbe = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getQueryParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getSyncParameter_b2f55318719e958c = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getSyncParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getUniformBlockIndex_a05b0c144aa49817 = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).getUniformBlockIndex(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        return ret;\n    };\n    imports.wbg.__wbg_invalidateFramebuffer_696c3c456c34a207 = function() { return handleError(function (arg0, arg1, arg2) {\n        getObject(arg0).invalidateFramebuffer(arg1 >>> 0, getObject(arg2));\n    }, arguments) };\n    imports.wbg.__wbg_readBuffer_bade27c1171e00cf = function(arg0, arg1) {\n        getObject(arg0).readBuffer(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_readPixels_493558abd28a3b61 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        getObject(arg0).readPixels(arg1, arg2, arg3, arg4, arg5 >>> 0, arg6 >>> 0, getObject(arg7));\n    }, arguments) };\n    imports.wbg.__wbg_readPixels_92102ee9fe1c81a0 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        getObject(arg0).readPixels(arg1, arg2, arg3, arg4, arg5 >>> 0, arg6 >>> 0, arg7);\n    }, arguments) };\n    imports.wbg.__wbg_renderbufferStorageMultisample_9cb173d2fd461513 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).renderbufferStorageMultisample(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n    };\n    imports.wbg.__wbg_samplerParameterf_38ca759dc5c40461 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).samplerParameterf(getObject(arg1), arg2 >>> 0, arg3);\n    };\n    imports.wbg.__wbg_samplerParameteri_c631c02ceefc6dc1 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).samplerParameteri(getObject(arg1), arg2 >>> 0, arg3);\n    };\n    imports.wbg.__wbg_texStorage2D_89c29252632da923 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).texStorage2D(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n    };\n    imports.wbg.__wbg_texStorage3D_3897fb6b91eb82d8 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        getObject(arg0).texStorage3D(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5, arg6);\n    };\n    imports.wbg.__wbg_texSubImage2D_6a8b0f3381d734c3 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        getObject(arg0).texSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8 >>> 0, getObject(arg9));\n    }, arguments) };\n    imports.wbg.__wbg_texSubImage2D_53b6a050a0b9b24e = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        getObject(arg0).texSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8 >>> 0, arg9);\n    }, arguments) };\n    imports.wbg.__wbg_texSubImage3D_84ef903e11598af0 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11) {\n        getObject(arg0).texSubImage3D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 >>> 0, arg10 >>> 0, arg11);\n    }, arguments) };\n    imports.wbg.__wbg_texSubImage3D_1d82135e9ce965bf = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11) {\n        getObject(arg0).texSubImage3D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 >>> 0, arg10 >>> 0, getObject(arg11));\n    }, arguments) };\n    imports.wbg.__wbg_uniform2fv_ffd0b1d3c3a4070a = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform2fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform2iv_32329f9a4d491136 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform2iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform3fv_bc831e48acb2c057 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform3fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform3iv_100a284f5a3cbca5 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform3iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform4fv_26d822da5c3fdb00 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform4fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform4iv_7f03c41e6e49bbd6 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform4iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniformBlockBinding_1971f4528d9c3043 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniformBlockBinding(getObject(arg1), arg2 >>> 0, arg3 >>> 0);\n    };\n    imports.wbg.__wbg_uniformMatrix2fv_5f1f56c7cbfb533f = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix2fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_uniformMatrix3fv_ae9271db8127a57b = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix3fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_uniformMatrix4fv_0f42d678a568ded9 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix4fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_vertexAttribDivisor_77f020121066a4d9 = function(arg0, arg1, arg2) {\n        getObject(arg0).vertexAttribDivisor(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_vertexAttribIPointer_b15ad1437a268cf5 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).vertexAttribIPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n    };\n    imports.wbg.__wbg_activeTexture_0daf7c1698e49f00 = function(arg0, arg1) {\n        getObject(arg0).activeTexture(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_attachShader_3038234860d2d59d = function(arg0, arg1, arg2) {\n        getObject(arg0).attachShader(getObject(arg1), getObject(arg2));\n    };\n    imports.wbg.__wbg_bindBuffer_9cb064991696b79f = function(arg0, arg1, arg2) {\n        getObject(arg0).bindBuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindFramebuffer_0522db2a250c29f0 = function(arg0, arg1, arg2) {\n        getObject(arg0).bindFramebuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindRenderbuffer_1e4928d9bf839c02 = function(arg0, arg1, arg2) {\n        getObject(arg0).bindRenderbuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindTexture_0c284b1604ba527c = function(arg0, arg1, arg2) {\n        getObject(arg0).bindTexture(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_blendColor_a17ddceb3534e0b3 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).blendColor(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_blendEquation_b5d5be767bd3835a = function(arg0, arg1) {\n        getObject(arg0).blendEquation(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_blendEquationSeparate_d2fa3b718ee3579f = function(arg0, arg1, arg2) {\n        getObject(arg0).blendEquationSeparate(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_blendFunc_d456b0c766f8dbc9 = function(arg0, arg1, arg2) {\n        getObject(arg0).blendFunc(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_blendFuncSeparate_9a7146974b3cd76d = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).blendFuncSeparate(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_colorMask_a7f067283ed312c9 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).colorMask(arg1 !== 0, arg2 !== 0, arg3 !== 0, arg4 !== 0);\n    };\n    imports.wbg.__wbg_compileShader_af777dd3b15798b3 = function(arg0, arg1) {\n        getObject(arg0).compileShader(getObject(arg1));\n    };\n    imports.wbg.__wbg_copyTexSubImage2D_47b14ff8459fd4c8 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        getObject(arg0).copyTexSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n    };\n    imports.wbg.__wbg_createBuffer_5ed0554ab35780b5 = function(arg0) {\n        const ret = getObject(arg0).createBuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createFramebuffer_86883935c13ddd59 = function(arg0) {\n        const ret = getObject(arg0).createFramebuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createProgram_7d25c1dd3bb0ce39 = function(arg0) {\n        const ret = getObject(arg0).createProgram();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createRenderbuffer_b392324e044d389a = function(arg0) {\n        const ret = getObject(arg0).createRenderbuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createShader_96339db58713e350 = function(arg0, arg1) {\n        const ret = getObject(arg0).createShader(arg1 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createTexture_c651f9e28d1ce9d2 = function(arg0) {\n        const ret = getObject(arg0).createTexture();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_cullFace_79e4ddbea13278b3 = function(arg0, arg1) {\n        getObject(arg0).cullFace(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_deleteBuffer_cf67a696a7857b3f = function(arg0, arg1) {\n        getObject(arg0).deleteBuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteFramebuffer_f9c2bceeb5422d9d = function(arg0, arg1) {\n        getObject(arg0).deleteFramebuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteProgram_9c8fa1ef341cb01d = function(arg0, arg1) {\n        getObject(arg0).deleteProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteRenderbuffer_cad502ac8d1398f2 = function(arg0, arg1) {\n        getObject(arg0).deleteRenderbuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteShader_f48f72524f5ee3ed = function(arg0, arg1) {\n        getObject(arg0).deleteShader(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteTexture_1b5f5e536e0d5545 = function(arg0, arg1) {\n        getObject(arg0).deleteTexture(getObject(arg1));\n    };\n    imports.wbg.__wbg_depthFunc_2060ec3687ac1f95 = function(arg0, arg1) {\n        getObject(arg0).depthFunc(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_depthMask_27d367443a80541d = function(arg0, arg1) {\n        getObject(arg0).depthMask(arg1 !== 0);\n    };\n    imports.wbg.__wbg_depthRange_7109c2393819a37b = function(arg0, arg1, arg2) {\n        getObject(arg0).depthRange(arg1, arg2);\n    };\n    imports.wbg.__wbg_disable_3adb8645ea1d92d4 = function(arg0, arg1) {\n        getObject(arg0).disable(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_disableVertexAttribArray_f469283fda607cee = function(arg0, arg1) {\n        getObject(arg0).disableVertexAttribArray(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_drawArrays_84de8a2416396807 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).drawArrays(arg1 >>> 0, arg2, arg3);\n    };\n    imports.wbg.__wbg_drawElements_dcb8df9c52e2bbd5 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).drawElements(arg1 >>> 0, arg2, arg3 >>> 0, arg4);\n    };\n    imports.wbg.__wbg_enable_1ac9f14a577b7c8b = function(arg0, arg1) {\n        getObject(arg0).enable(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_enableVertexAttribArray_53139716d9c95dba = function(arg0, arg1) {\n        getObject(arg0).enableVertexAttribArray(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_framebufferRenderbuffer_77bdb2f359a5728f = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).framebufferRenderbuffer(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, getObject(arg4));\n    };\n    imports.wbg.__wbg_framebufferTexture2D_885176f16a153fec = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).framebufferTexture2D(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, getObject(arg4), arg5);\n    };\n    imports.wbg.__wbg_frontFace_3d7784c56ffede8a = function(arg0, arg1) {\n        getObject(arg0).frontFace(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_getActiveUniform_9c4ac7c1ccf5f894 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getActiveUniform(getObject(arg1), arg2 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getExtension_f0070583175271d4 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).getExtension(getStringFromWasm0(arg1, arg2));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getParameter_56d47f9b55e463d4 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).getParameter(arg1 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getProgramInfoLog_7654794297967ac0 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg1).getProgramInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_getProgramParameter_5b1a40917aa850f8 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getProgramParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getShaderInfoLog_915d0e8506c11159 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg1).getShaderInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_getShaderParameter_f9240892c9e7a0a3 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getShaderParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getSupportedExtensions_7af8f7bbdd4d7b2c = function(arg0) {\n        const ret = getObject(arg0).getSupportedExtensions();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getUniformLocation_c6caabb349b43da7 = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).getUniformLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_linkProgram_2d5cc584654696b8 = function(arg0, arg1) {\n        getObject(arg0).linkProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_pixelStorei_a0b83efc92cd29fe = function(arg0, arg1, arg2) {\n        getObject(arg0).pixelStorei(arg1 >>> 0, arg2);\n    };\n    imports.wbg.__wbg_polygonOffset_03d3955d5a1afa08 = function(arg0, arg1, arg2) {\n        getObject(arg0).polygonOffset(arg1, arg2);\n    };\n    imports.wbg.__wbg_renderbufferStorage_2192d9cd09128339 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).renderbufferStorage(arg1 >>> 0, arg2 >>> 0, arg3, arg4);\n    };\n    imports.wbg.__wbg_scissor_2b084e0dc81d67f4 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).scissor(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_shaderSource_57883245cdfb0dca = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).shaderSource(getObject(arg1), getStringFromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_stencilFuncSeparate_3be68afd7ca6efcc = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).stencilFuncSeparate(arg1 >>> 0, arg2 >>> 0, arg3, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_stencilMask_144b86d15d9fdbe6 = function(arg0, arg1) {\n        getObject(arg0).stencilMask(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_stencilMaskSeparate_84a2494b967772c7 = function(arg0, arg1, arg2) {\n        getObject(arg0).stencilMaskSeparate(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_stencilOpSeparate_1708aea1aea0dc48 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).stencilOpSeparate(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_texParameteri_e0ce3810261e0864 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).texParameteri(arg1 >>> 0, arg2 >>> 0, arg3);\n    };\n    imports.wbg.__wbg_uniform1f_dcc6951bde745417 = function(arg0, arg1, arg2) {\n        getObject(arg0).uniform1f(getObject(arg1), arg2);\n    };\n    imports.wbg.__wbg_uniform1i_4fdc6d6740375d22 = function(arg0, arg1, arg2) {\n        getObject(arg0).uniform1i(getObject(arg1), arg2);\n    };\n    imports.wbg.__wbg_uniform4f_19b349303edb7836 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).uniform4f(getObject(arg1), arg2, arg3, arg4, arg5);\n    };\n    imports.wbg.__wbg_useProgram_2f4094faf45ecba1 = function(arg0, arg1) {\n        getObject(arg0).useProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_vertexAttribPointer_ad370785358334f4 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        getObject(arg0).vertexAttribPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4 !== 0, arg5, arg6);\n    };\n    imports.wbg.__wbg_viewport_cc41e28a71c23915 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).viewport(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_instanceof_Window_e266f02eee43b570 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Window;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_document_950215a728589a2d = function(arg0) {\n        const ret = getObject(arg0).document;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_navigator_b18e629f7f0b75fa = function(arg0) {\n        const ret = getObject(arg0).navigator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_innerWidth_7e9d12e05bcb598e = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).innerWidth;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_innerHeight_3ef25a30618357e0 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).innerHeight;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_devicePixelRatio_5f8f5cab76864090 = function(arg0) {\n        const ret = getObject(arg0).devicePixelRatio;\n        return ret;\n    };\n    imports.wbg.__wbg_isSecureContext_c3e5510caacaa0ce = function(arg0) {\n        const ret = getObject(arg0).isSecureContext;\n        return ret;\n    };\n    imports.wbg.__wbg_cancelAnimationFrame_d079cdb83bc43b26 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).cancelAnimationFrame(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_matchMedia_967e50e4289050fa = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).matchMedia(getStringFromWasm0(arg1, arg2));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_requestAnimationFrame_afe426b568f84138 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).requestAnimationFrame(getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_get_e6ae480a4b8df368 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0)[getStringFromWasm0(arg1, arg2)];\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_clearTimeout_b2b8af0f044e02e9 = function(arg0, arg1) {\n        getObject(arg0).clearTimeout(arg1);\n    };\n    imports.wbg.__wbg_fetch_e8596d8a939a0853 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).fetch(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setTimeout_6609c9aa64f32bfc = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).setTimeout(getObject(arg1), arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_setbuffer_bad384d1628a8306 = function(arg0, arg1) {\n        getObject(arg0).buffer = getObject(arg1);\n    };\n    imports.wbg.__wbg_setonended_15b13187aec41ac9 = function(arg0, arg1) {\n        getObject(arg0).onended = getObject(arg1);\n    };\n    imports.wbg.__wbg_start_9169e040a16354b9 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).start(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_connect_77f2f818a74097e1 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).connect(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_addEventListener_615d4590d38da1c9 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).addEventListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    }, arguments) };\n    imports.wbg.__wbg_addEventListener_cf5b03cd29763277 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).addEventListener(getStringFromWasm0(arg1, arg2), getObject(arg3), getObject(arg4));\n    }, arguments) };\n    imports.wbg.__wbg_removeEventListener_86fd19ed073cd1ed = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).removeEventListener(getStringFromWasm0(arg1, arg2), getObject(arg3));\n    }, arguments) };\n    imports.wbg.__wbg_charCode_504e79c3e550d1bb = function(arg0) {\n        const ret = getObject(arg0).charCode;\n        return ret;\n    };\n    imports.wbg.__wbg_keyCode_b33194be2ceec53b = function(arg0) {\n        const ret = getObject(arg0).keyCode;\n        return ret;\n    };\n    imports.wbg.__wbg_altKey_dff2a075455ac01b = function(arg0) {\n        const ret = getObject(arg0).altKey;\n        return ret;\n    };\n    imports.wbg.__wbg_ctrlKey_993b558f853d64ce = function(arg0) {\n        const ret = getObject(arg0).ctrlKey;\n        return ret;\n    };\n    imports.wbg.__wbg_shiftKey_31e62e9d172b26f0 = function(arg0) {\n        const ret = getObject(arg0).shiftKey;\n        return ret;\n    };\n    imports.wbg.__wbg_metaKey_9f0f19692d0498bd = function(arg0) {\n        const ret = getObject(arg0).metaKey;\n        return ret;\n    };\n    imports.wbg.__wbg_key_f0decac219aa904b = function(arg0, arg1) {\n        const ret = getObject(arg1).key;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_code_aed21120de275a12 = function(arg0, arg1) {\n        const ret = getObject(arg1).code;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_getModifierState_03b72700dbe33ad6 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getModifierState(getStringFromWasm0(arg1, arg2));\n        return ret;\n    };\n    imports.wbg.__wbg_parentElement_0e8c9afce5cb9d6e = function(arg0) {\n        const ret = getObject(arg0).parentElement;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_appendChild_b8199dc1655c852d = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).appendChild(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_target_b629c177f9bee3da = function(arg0) {\n        const ret = getObject(arg0).target;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_cancelBubble_c9a8182589205d54 = function(arg0) {\n        const ret = getObject(arg0).cancelBubble;\n        return ret;\n    };\n    imports.wbg.__wbg_preventDefault_16b2170b12f56317 = function(arg0) {\n        getObject(arg0).preventDefault();\n    };\n    imports.wbg.__wbg_stopPropagation_7647c9985222f9b0 = function(arg0) {\n        getObject(arg0).stopPropagation();\n    };\n    imports.wbg.__wbg_getGamepads_4c461e89e0e20e75 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).getGamepads();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_id_291975ef0fb03ce5 = function(arg0, arg1) {\n        const ret = getObject(arg1).id;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_index_648379aa28ee0be3 = function(arg0) {\n        const ret = getObject(arg0).index;\n        return ret;\n    };\n    imports.wbg.__wbg_mapping_6ef03dc7a02c4bef = function(arg0) {\n        const ret = getObject(arg0).mapping;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_connected_149a005d845e67e2 = function(arg0) {\n        const ret = getObject(arg0).connected;\n        return ret;\n    };\n    imports.wbg.__wbg_buttons_e33d9bb4a83e0700 = function(arg0) {\n        const ret = getObject(arg0).buttons;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_axes_81f7594079c3e88c = function(arg0) {\n        const ret = getObject(arg0).axes;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_matches_7b5ad9e6bb56f1f3 = function(arg0) {\n        const ret = getObject(arg0).matches;\n        return ret;\n    };\n    imports.wbg.__wbg_addListener_dfc3f9e430149b14 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).addListener(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_removeListener_6f811d2fb59768b9 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).removeListener(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_size_5ce324b99223d189 = function(arg0) {\n        const ret = getObject(arg0).size;\n        return ret;\n    };\n    imports.wbg.__wbg_type_979610383a4b7c57 = function(arg0) {\n        const ret = getObject(arg0).type;\n        return ret;\n    };\n    imports.wbg.__wbg_name_1e6651aff4fe7a88 = function(arg0, arg1) {\n        const ret = getObject(arg1).name;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_drawArraysInstancedANGLE_403faa11d52ccf6d = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).drawArraysInstancedANGLE(arg1 >>> 0, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_drawElementsInstancedANGLE_0230afc27cf9cec9 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).drawElementsInstancedANGLE(arg1 >>> 0, arg2, arg3 >>> 0, arg4, arg5);\n    };\n    imports.wbg.__wbg_vertexAttribDivisorANGLE_6bbb3df4c6e7d08b = function(arg0, arg1, arg2) {\n        getObject(arg0).vertexAttribDivisorANGLE(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_copyToChannel_9babe9bf308bffc3 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        getObject(arg0).copyToChannel(getArrayF32FromWasm0(arg1, arg2), arg3);\n    }, arguments) };\n    imports.wbg.__wbg_setProperty_21e2e7868b86a93e = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).setProperty(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_x_0938e87a3ff14a2e = function(arg0) {\n        const ret = getObject(arg0).x;\n        return ret;\n    };\n    imports.wbg.__wbg_y_b881176a43492948 = function(arg0) {\n        const ret = getObject(arg0).y;\n        return ret;\n    };\n    imports.wbg.__wbg_width_f0cbf7dcbbe056da = function(arg0) {\n        const ret = getObject(arg0).width;\n        return ret;\n    };\n    imports.wbg.__wbg_height_e46975153da440ae = function(arg0) {\n        const ret = getObject(arg0).height;\n        return ret;\n    };\n    imports.wbg.__wbg_pressed_3b05e38d48c4c7ab = function(arg0) {\n        const ret = getObject(arg0).pressed;\n        return ret;\n    };\n    imports.wbg.__wbg_body_be46234bb33edd63 = function(arg0) {\n        const ret = getObject(arg0).body;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fullscreenElement_65f14a4df7c25129 = function(arg0) {\n        const ret = getObject(arg0).fullscreenElement;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createElement_e2a0e21263eb5416 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).createElement(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_exitFullscreen_36506b10bd87f8b8 = function(arg0) {\n        getObject(arg0).exitFullscreen();\n    };\n    imports.wbg.__wbg_exitPointerLock_c255b2b7e186916c = function(arg0) {\n        getObject(arg0).exitPointerLock();\n    };\n    imports.wbg.__wbg_querySelector_32b9d7ebb2df951d = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).querySelector(getStringFromWasm0(arg1, arg2));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getBoundingClientRect_aaa701cbcb448965 = function(arg0) {\n        const ret = getObject(arg0).getBoundingClientRect();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_requestFullscreen_4eee04b9090fa98a = function() { return handleError(function (arg0) {\n        getObject(arg0).requestFullscreen();\n    }, arguments) };\n    imports.wbg.__wbg_requestPointerLock_810495dd0fa1efc0 = function(arg0) {\n        getObject(arg0).requestPointerLock();\n    };\n    imports.wbg.__wbg_setAttribute_79c9562d32d05e66 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).setAttribute(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_setPointerCapture_5479dc0d082282b7 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).setPointerCapture(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_style_2141664e428fef46 = function(arg0) {\n        const ret = getObject(arg0).style;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_bufferData_05664df801d7aec0 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferData(arg1 >>> 0, arg2, arg3 >>> 0);\n    };\n    imports.wbg.__wbg_bufferData_023700b2ed207c43 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferData(arg1 >>> 0, getObject(arg2), arg3 >>> 0);\n    };\n    imports.wbg.__wbg_bufferSubData_4e653f611d7a962d = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).bufferSubData(arg1 >>> 0, arg2, getObject(arg3));\n    };\n    imports.wbg.__wbg_compressedTexSubImage2D_788296e97b316838 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        getObject(arg0).compressedTexSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, getObject(arg8));\n    };\n    imports.wbg.__wbg_readPixels_30de7174c15126d3 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        getObject(arg0).readPixels(arg1, arg2, arg3, arg4, arg5 >>> 0, arg6 >>> 0, getObject(arg7));\n    }, arguments) };\n    imports.wbg.__wbg_texSubImage2D_57792696288b0a61 = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        getObject(arg0).texSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7 >>> 0, arg8 >>> 0, getObject(arg9));\n    }, arguments) };\n    imports.wbg.__wbg_uniform2fv_c29ce786946f1aae = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform2fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform2iv_58c3d5ee9e70c71d = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform2iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform3fv_5ca48b3279e0c643 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform3fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform3iv_0a103fe131bd9213 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform3iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform4fv_14f1c5ef10bfb4c9 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform4fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniform4iv_9436eeda2a27cce8 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).uniform4iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_uniformMatrix2fv_1a40e9f63b2005c8 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix2fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_uniformMatrix3fv_dcde28ba8c34d30e = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix3fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_uniformMatrix4fv_4575a018c8188146 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).uniformMatrix4fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n    };\n    imports.wbg.__wbg_activeTexture_01d5469eb22c10e7 = function(arg0, arg1) {\n        getObject(arg0).activeTexture(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_attachShader_14fb12e2ae589dc3 = function(arg0, arg1, arg2) {\n        getObject(arg0).attachShader(getObject(arg1), getObject(arg2));\n    };\n    imports.wbg.__wbg_bindBuffer_b7c382dcd70e33f6 = function(arg0, arg1, arg2) {\n        getObject(arg0).bindBuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindFramebuffer_a5ab0ed0463586cb = function(arg0, arg1, arg2) {\n        getObject(arg0).bindFramebuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindRenderbuffer_2d67c879cdbe5ea9 = function(arg0, arg1, arg2) {\n        getObject(arg0).bindRenderbuffer(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_bindTexture_c1c0e00507424f8e = function(arg0, arg1, arg2) {\n        getObject(arg0).bindTexture(arg1 >>> 0, getObject(arg2));\n    };\n    imports.wbg.__wbg_blendColor_13739d87434b79c3 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).blendColor(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_blendEquation_562c3267161e4675 = function(arg0, arg1) {\n        getObject(arg0).blendEquation(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_blendEquationSeparate_48b95e78f7224be4 = function(arg0, arg1, arg2) {\n        getObject(arg0).blendEquationSeparate(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_blendFunc_f4365f78b650180f = function(arg0, arg1, arg2) {\n        getObject(arg0).blendFunc(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_blendFuncSeparate_b508053691b6ebbe = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).blendFuncSeparate(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_colorMask_99120a2c8caf1298 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).colorMask(arg1 !== 0, arg2 !== 0, arg3 !== 0, arg4 !== 0);\n    };\n    imports.wbg.__wbg_compileShader_4e9130ccbd4a0238 = function(arg0, arg1) {\n        getObject(arg0).compileShader(getObject(arg1));\n    };\n    imports.wbg.__wbg_copyTexSubImage2D_7c0b0080eece3c1a = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        getObject(arg0).copyTexSubImage2D(arg1 >>> 0, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\n    };\n    imports.wbg.__wbg_createBuffer_8c64250e5283611c = function(arg0) {\n        const ret = getObject(arg0).createBuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createFramebuffer_1f943a32c748753e = function(arg0) {\n        const ret = getObject(arg0).createFramebuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createProgram_28db0ff3cee5f71a = function(arg0) {\n        const ret = getObject(arg0).createProgram();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createRenderbuffer_a76dcfda7bdc749a = function(arg0) {\n        const ret = getObject(arg0).createRenderbuffer();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createShader_c5fcd8592f47b510 = function(arg0, arg1) {\n        const ret = getObject(arg0).createShader(arg1 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_createTexture_81fd93af28301e0e = function(arg0) {\n        const ret = getObject(arg0).createTexture();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_cullFace_d4450f8718c6b3eb = function(arg0, arg1) {\n        getObject(arg0).cullFace(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_deleteBuffer_17feed38f3a70ec9 = function(arg0, arg1) {\n        getObject(arg0).deleteBuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteFramebuffer_130abca01c89b7d6 = function(arg0, arg1) {\n        getObject(arg0).deleteFramebuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteProgram_dd5f0e2bc555e270 = function(arg0, arg1) {\n        getObject(arg0).deleteProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteRenderbuffer_385f3c9e8759b99e = function(arg0, arg1) {\n        getObject(arg0).deleteRenderbuffer(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteShader_fac9fb3cdefdf6ec = function(arg0, arg1) {\n        getObject(arg0).deleteShader(getObject(arg1));\n    };\n    imports.wbg.__wbg_deleteTexture_605a36a7e380df5f = function(arg0, arg1) {\n        getObject(arg0).deleteTexture(getObject(arg1));\n    };\n    imports.wbg.__wbg_depthFunc_00d8a905436dc681 = function(arg0, arg1) {\n        getObject(arg0).depthFunc(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_depthMask_134f9e3073ca4fd0 = function(arg0, arg1) {\n        getObject(arg0).depthMask(arg1 !== 0);\n    };\n    imports.wbg.__wbg_depthRange_f34f19edea1feadd = function(arg0, arg1, arg2) {\n        getObject(arg0).depthRange(arg1, arg2);\n    };\n    imports.wbg.__wbg_disable_65425605098b79cf = function(arg0, arg1) {\n        getObject(arg0).disable(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_disableVertexAttribArray_cf25f8beb5872364 = function(arg0, arg1) {\n        getObject(arg0).disableVertexAttribArray(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_drawArrays_e5fa3cfc2b5d7c6d = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).drawArrays(arg1 >>> 0, arg2, arg3);\n    };\n    imports.wbg.__wbg_drawElements_a388832eba137ef0 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).drawElements(arg1 >>> 0, arg2, arg3 >>> 0, arg4);\n    };\n    imports.wbg.__wbg_enable_2c3b6a4692af9b1b = function(arg0, arg1) {\n        getObject(arg0).enable(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_enableVertexAttribArray_6dd3d0668209ae19 = function(arg0, arg1) {\n        getObject(arg0).enableVertexAttribArray(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_framebufferRenderbuffer_3bf1420713a0b21a = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).framebufferRenderbuffer(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, getObject(arg4));\n    };\n    imports.wbg.__wbg_framebufferTexture2D_ed03c0674b9979ce = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).framebufferTexture2D(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, getObject(arg4), arg5);\n    };\n    imports.wbg.__wbg_frontFace_00177185d2fae697 = function(arg0, arg1) {\n        getObject(arg0).frontFace(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_getActiveUniform_e49dcda694ae15ab = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getActiveUniform(getObject(arg1), arg2 >>> 0);\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getParameter_d6cd2dd2cde656ec = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).getParameter(arg1 >>> 0);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_getProgramInfoLog_7fd2a7c6c1a280c1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg1).getProgramInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_getProgramParameter_af1cfcccbbc80f71 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getProgramParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getShaderInfoLog_d057293074e59c61 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg1).getShaderInfoLog(getObject(arg2));\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_getShaderParameter_685d7d7092c6bae6 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getShaderParameter(getObject(arg1), arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getUniformLocation_b46e5db76599a918 = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).getUniformLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_linkProgram_ca9df3fba2fd4125 = function(arg0, arg1) {\n        getObject(arg0).linkProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_pixelStorei_f97b971917582269 = function(arg0, arg1, arg2) {\n        getObject(arg0).pixelStorei(arg1 >>> 0, arg2);\n    };\n    imports.wbg.__wbg_polygonOffset_fb73618b77fd3f6f = function(arg0, arg1, arg2) {\n        getObject(arg0).polygonOffset(arg1, arg2);\n    };\n    imports.wbg.__wbg_renderbufferStorage_37eab84be1494aef = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).renderbufferStorage(arg1 >>> 0, arg2 >>> 0, arg3, arg4);\n    };\n    imports.wbg.__wbg_scissor_8bc2e761846f53f0 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).scissor(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_shaderSource_457e8bc42050401d = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).shaderSource(getObject(arg1), getStringFromWasm0(arg2, arg3));\n    };\n    imports.wbg.__wbg_stencilFuncSeparate_510d3287542b4574 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).stencilFuncSeparate(arg1 >>> 0, arg2 >>> 0, arg3, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_stencilMask_e1887eeaabe22771 = function(arg0, arg1) {\n        getObject(arg0).stencilMask(arg1 >>> 0);\n    };\n    imports.wbg.__wbg_stencilMaskSeparate_e89abefeb5641657 = function(arg0, arg1, arg2) {\n        getObject(arg0).stencilMaskSeparate(arg1 >>> 0, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_stencilOpSeparate_aa3d09aa448a6f48 = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).stencilOpSeparate(arg1 >>> 0, arg2 >>> 0, arg3 >>> 0, arg4 >>> 0);\n    };\n    imports.wbg.__wbg_texParameteri_9fbb09bbf9670af4 = function(arg0, arg1, arg2, arg3) {\n        getObject(arg0).texParameteri(arg1 >>> 0, arg2 >>> 0, arg3);\n    };\n    imports.wbg.__wbg_uniform1f_062c683ec584f7e8 = function(arg0, arg1, arg2) {\n        getObject(arg0).uniform1f(getObject(arg1), arg2);\n    };\n    imports.wbg.__wbg_uniform1i_1f8256271b54cf41 = function(arg0, arg1, arg2) {\n        getObject(arg0).uniform1i(getObject(arg1), arg2);\n    };\n    imports.wbg.__wbg_uniform4f_68fac972655f5359 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        getObject(arg0).uniform4f(getObject(arg1), arg2, arg3, arg4, arg5);\n    };\n    imports.wbg.__wbg_useProgram_6c9019d05fb8d280 = function(arg0, arg1) {\n        getObject(arg0).useProgram(getObject(arg1));\n    };\n    imports.wbg.__wbg_vertexAttribPointer_ccabef9be68fe1c4 = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        getObject(arg0).vertexAttribPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4 !== 0, arg5, arg6);\n    };\n    imports.wbg.__wbg_viewport_4bdfc4b8959593ee = function(arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).viewport(arg1, arg2, arg3, arg4);\n    };\n    imports.wbg.__wbg_error_2d344a50ccf38b3b = function(arg0, arg1) {\n        console.error(getObject(arg0), getObject(arg1));\n    };\n    imports.wbg.__wbg_instanceof_DomException_0dd0987418c574eb = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof DOMException;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_message_f15effc8b20828e2 = function(arg0, arg1) {\n        const ret = getObject(arg1).message;\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_clientX_35f23f953e04ec0e = function(arg0) {\n        const ret = getObject(arg0).clientX;\n        return ret;\n    };\n    imports.wbg.__wbg_clientY_8104e462abc0b3ec = function(arg0) {\n        const ret = getObject(arg0).clientY;\n        return ret;\n    };\n    imports.wbg.__wbg_offsetX_413d9f02022e72ad = function(arg0) {\n        const ret = getObject(arg0).offsetX;\n        return ret;\n    };\n    imports.wbg.__wbg_offsetY_488f80a0a9666028 = function(arg0) {\n        const ret = getObject(arg0).offsetY;\n        return ret;\n    };\n    imports.wbg.__wbg_ctrlKey_e1b8f1de1eb24d5d = function(arg0) {\n        const ret = getObject(arg0).ctrlKey;\n        return ret;\n    };\n    imports.wbg.__wbg_shiftKey_fdd99b6df96e25c5 = function(arg0) {\n        const ret = getObject(arg0).shiftKey;\n        return ret;\n    };\n    imports.wbg.__wbg_altKey_d531a4d3704557cb = function(arg0) {\n        const ret = getObject(arg0).altKey;\n        return ret;\n    };\n    imports.wbg.__wbg_metaKey_934772989e28020c = function(arg0) {\n        const ret = getObject(arg0).metaKey;\n        return ret;\n    };\n    imports.wbg.__wbg_button_a1c470d5e4c997f2 = function(arg0) {\n        const ret = getObject(arg0).button;\n        return ret;\n    };\n    imports.wbg.__wbg_buttons_42a7b7de33d8e572 = function(arg0) {\n        const ret = getObject(arg0).buttons;\n        return ret;\n    };\n    imports.wbg.__wbg_movementX_f4d07f6658c1e16f = function(arg0) {\n        const ret = getObject(arg0).movementX;\n        return ret;\n    };\n    imports.wbg.__wbg_movementY_30276c1f90aec4fa = function(arg0) {\n        const ret = getObject(arg0).movementY;\n        return ret;\n    };\n    imports.wbg.__wbg_pointerId_d2caae4465ba386f = function(arg0) {\n        const ret = getObject(arg0).pointerId;\n        return ret;\n    };\n    imports.wbg.__wbg_deltaX_b7d127c94d6265c0 = function(arg0) {\n        const ret = getObject(arg0).deltaX;\n        return ret;\n    };\n    imports.wbg.__wbg_deltaY_b32fa858e16edcc0 = function(arg0) {\n        const ret = getObject(arg0).deltaY;\n        return ret;\n    };\n    imports.wbg.__wbg_deltaMode_11f7b19e64d9a515 = function(arg0) {\n        const ret = getObject(arg0).deltaMode;\n        return ret;\n    };\n    imports.wbg.__wbg_destination_5dfc354bcf2eb941 = function(arg0) {\n        const ret = getObject(arg0).destination;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_currentTime_d94729a1b5fd59a5 = function(arg0) {\n        const ret = getObject(arg0).currentTime;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithcontextoptions_6c6a79a71ed7efa3 = function() { return handleError(function (arg0) {\n        const ret = new lAudioContext(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_close_82409a9d656a7c26 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).close();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_createBuffer_d142e00390bff447 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).createBuffer(arg1 >>> 0, arg2 >>> 0, arg3);\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_createBufferSource_1473226efd418a08 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).createBufferSource();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_resume_72fe7cd3e68b861a = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).resume();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_bindVertexArrayOES_688eba003a98a0bb = function(arg0, arg1) {\n        getObject(arg0).bindVertexArrayOES(getObject(arg1));\n    };\n    imports.wbg.__wbg_createVertexArrayOES_02cfe655604046eb = function(arg0) {\n        const ret = getObject(arg0).createVertexArrayOES();\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_deleteVertexArrayOES_ba22911f739464a7 = function(arg0, arg1) {\n        getObject(arg0).deleteVertexArrayOES(getObject(arg1));\n    };\n    imports.wbg.__wbg_now_c644db5194be8437 = function(arg0) {\n        const ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Response_fb3a4df648c1859b = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Response;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_arrayBuffer_cb886e06a9e36e4d = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_HtmlCanvasElement_f5f69dab93281ebe = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof HTMLCanvasElement;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_width_a40e21a22129b197 = function(arg0) {\n        const ret = getObject(arg0).width;\n        return ret;\n    };\n    imports.wbg.__wbg_setwidth_81c62bc806e0a727 = function(arg0, arg1) {\n        getObject(arg0).width = arg1 >>> 0;\n    };\n    imports.wbg.__wbg_height_98d51321254345a5 = function(arg0) {\n        const ret = getObject(arg0).height;\n        return ret;\n    };\n    imports.wbg.__wbg_setheight_98cf0db22c40ef07 = function(arg0, arg1) {\n        getObject(arg0).height = arg1 >>> 0;\n    };\n    imports.wbg.__wbg_getContext_89a318b610dc5fd4 = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).getContext(getStringFromWasm0(arg1, arg2), getObject(arg3));\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_matches_46e979ff3e4d0811 = function(arg0) {\n        const ret = getObject(arg0).matches;\n        return ret;\n    };\n    imports.wbg.__wbg_drawBuffersWEBGL_dfb0d803ea7ebe07 = function(arg0, arg1) {\n        getObject(arg0).drawBuffersWEBGL(getObject(arg1));\n    };\n    imports.wbg.__wbg_get_27fe3dac1c4d0224 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_e498fbc24f9c1d4f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_b525de17f44a8943 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_2b8b6bd7753c76ba = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_baf4855f9a986186 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_95d1ea488d03e4e8 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_f9876326328f45ed = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_e7c1f827057f6584 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_a09ec664e14b1b81 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_87cbb8506fecf3a9 = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_c85a9259e621f3db = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_eval_be0434aab6074e1e = function() { return handleError(function (arg0, arg1) {\n        const ret = eval(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_of_892d7838f8e4cc20 = function(arg0) {\n        const ret = Array.of(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_push_49c286f04dd3bf59 = function(arg0, arg1) {\n        const ret = getObject(arg0).push(getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_call_9495de66fdbe016b = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_now_931686b195a14f9d = function() {\n        const ret = Date.now();\n        return ret;\n    };\n    imports.wbg.__wbg_is_8f1618fe9a4fd388 = function(arg0, arg1) {\n        const ret = Object.is(getObject(arg0), getObject(arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_resolve_fd40f858d9db1a04 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_ec5db6d509eb475f = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_f753623316e2873a = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_cf65c07de34b9a08 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_55f9ffb569d9fa74 = function(arg0, arg1, arg2) {\n        const ret = new Int8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_f477e654086cbbb6 = function(arg0, arg1, arg2) {\n        const ret = new Int16Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_b57a602974d4b1cd = function(arg0, arg1, arg2) {\n        const ret = new Int32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_9fb2f11355ecadf5 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_537b7341ce90bb31 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_17499e8aa4003ebd = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_27a2afe8ab42b09f = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_9241d9d251418ebf = function(arg0, arg1, arg2) {\n        const ret = new Uint16Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_5c5a6e21987c3bee = function(arg0, arg1, arg2) {\n        const ret = new Uint32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_4078d56428eb2926 = function(arg0, arg1, arg2) {\n        const ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithlength_b56c882b57805732 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_subarray_7526649b91a252a6 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_6aa458a4ebdb65cb = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_random_afb3265527cf67c8 = typeof Math.random == 'function' ? Math.random : notDefined('Math.random');\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_malloc, tangle._time_machine._wasm_instance.instance.exports.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = tangle._time_machine._wasm_instance.instance.exports.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1035 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_34);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1037 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1039 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1041 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1043 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1045 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1047 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1049 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper1051 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 372, __wbg_adapter_37);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper16604 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 10429, __wbg_adapter_54);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper39367 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 25326, __wbg_adapter_57);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, tangleInstance) {\n    tangle = tangleInstance;\n    init.__wbindgen_wasm_module = tangle._time_machine._wasm_instance;\n    cachedFloat32Memory0 = null;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    tangle._time_machine._wasm_instance.instance.exports.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, tangle);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('tangleshoot_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, tangle } = await load(await input, imports);\n\n    return finalizeInit(instance, tangle);\n}\n\nexport { initSync }\nexport default init;\n", "export function set_random_name() {\r\n  if (!window.location.hash) {\r\n      window.location.hash += ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)];\r\n      window.location.hash += ADJECTIVES[Math.floor(Math.random() * ADJECTIVES.length)];\r\n      window.location.hash += ANIMAL_NAMES[Math.floor(Math.random() * ANIMAL_NAMES.length)];\r\n  }\r\n}\r\n\r\nconst ANIMAL_NAMES = [\r\n  \"Albatross\",\r\n  \"Alligator\",\r\n  \"Alpaca\",\r\n  \"Antelope\",\r\n  \"Donkey\",\r\n  \"Badger\",\r\n  \"Bat\",\r\n  \"Bear\",\r\n  \"Bee\",\r\n  \"Bison\",\r\n  \"Buffalo\",\r\n  \"Butterfly\",\r\n  \"Camel\",\r\n  \"Capybara\",\r\n  \"Cat\",\r\n  \"Cheetah\",\r\n  \"Chicken\",\r\n  \"Chinchilla\",\r\n  \"Clam\",\r\n  \"Cobra\",\r\n  \"Crab\",\r\n  \"Crane\",\r\n  \"Crow\",\r\n  \"Deer\",\r\n  \"Dog\",\r\n  \"Dolphin\",\r\n  \"Dove\",\r\n  \"Dragonfly\",\r\n  \"Duck\",\r\n  \"Eagle\",\r\n  \"Elephant\",\r\n  \"Elk\",\r\n  \"Emu\",\r\n  \"Falcon\",\r\n  \"Ferret\",\r\n  \"Finch\",\r\n  \"Fish\",\r\n  \"Flamingo\",\r\n  \"Fox\",\r\n  \"Frog\",\r\n  \"Gazelle\",\r\n  \"Gerbil\",\r\n  \"Giraffe\",\r\n  \"Goat\",\r\n  \"Goldfish\",\r\n  \"Goose\",\r\n  \"Grasshopper\",\r\n  \"Hamster\",\r\n  \"Heron\",\r\n  \"Horse\",\r\n  \"Hyena\",\r\n  \"Jaguar\",\r\n  \"Jellyfish\",\r\n  \"Kangaroo\",\r\n  \"Koala\",\r\n  \"Lemur\",\r\n  \"Lion\",\r\n  \"Lobster\",\r\n  \"Manatee\",\r\n  \"Mantis\",\r\n  \"Meerkat\",\r\n  \"Mongoose\",\r\n  \"Moose\",\r\n  \"Mouse\",\r\n  \"Narwhal\",\r\n  \"Octopus\",\r\n  \"Okapi\",\r\n  \"Otter\",\r\n  \"Owl\",\r\n  \"Panther\",\r\n  \"Parrot\",\r\n  \"Pelican\",\r\n  \"Penguin\",\r\n  \"Pony\",\r\n  \"Porcupine\",\r\n  \"Rabbit\",\r\n  \"Raccoon\",\r\n  \"Raven\",\r\n  \"Salmon\",\r\n  \"Seahorse\",\r\n  \"Seal\",\r\n  \"Shark\",\r\n  \"Snake\",\r\n  \"Sparrow\",\r\n  \"Stingray\",\r\n  \"Stork\",\r\n  \"Swan\",\r\n  \"Tiger\",\r\n  \"Turtle\",\r\n  \"Viper\",\r\n  \"Walrus\",\r\n  \"Wolf\",\r\n  \"Wolverine\",\r\n  \"Wombat\",\r\n  \"Yak\",\r\n  \"Zebra\",\r\n  \"Gnome\",\r\n  \"Unicorn\",\r\n  \"Dragon\",\r\n  \"Hippo\",\r\n];\r\n\r\nconst ADJECTIVES = [\r\n  \"Beefy\",\r\n  \"Big\",\r\n  \"Bold\",\r\n  \"Brave\",\r\n  \"Bright\",\r\n  \"Buff\",\r\n  \"Calm\",\r\n  \"Charming\",\r\n  \"Chill\",\r\n  \"Creative\",\r\n  \"Cute\",\r\n  \"Cool\",\r\n  \"Crafty\",\r\n  \"Cunning\",\r\n  \"Daring\",\r\n  \"Elegant\",\r\n  \"Excellent\",\r\n  \"Fab\",\r\n  \"Fluffy\",\r\n  \"Grand\",\r\n  \"Green\",\r\n  \"Happy\",\r\n  \"Heavy\",\r\n  \"Honest\",\r\n  \"Huge\",\r\n  \"Humble\",\r\n  \"Iconic\",\r\n  \"Immense\",\r\n  \"Jolly\",\r\n  \"Jumbo\",\r\n  \"Kind\",\r\n  \"Little\",\r\n  \"Loyal\",\r\n  \"Lucky\",\r\n  \"Majestic\",\r\n  \"Noble\",\r\n  \"Nefarious\",\r\n  \"Odd\",\r\n  \"Ornate\",\r\n  \"Plucky\",\r\n  \"Plump\",\r\n  \"Polite\",\r\n  \"Posh\",\r\n  \"Quirky\",\r\n  \"Quick\",\r\n  \"Round\",\r\n  \"Relaxed\",\r\n  \"Rotund\",\r\n  \"Shy\",\r\n  \"Sleek\",\r\n  \"Sly\",\r\n  \"Spry\",\r\n  \"Stellar\",\r\n  \"Super\",\r\n  \"Tactical\",\r\n  \"Tidy\",\r\n  \"Trendy\",\r\n  \"Unique\",\r\n  \"Vivid\",\r\n  \"Wild\",\r\n  \"Yappy\",\r\n  \"Young\",\r\n  \"Zany\",\r\n  \"Zesty\",\r\n];\r\n", "// import { Tangle, TangleState, UserId } from \"./tangle/tangle_ts/src/index\";\r\nimport init from \"./wasm/tangleshoot\";\r\nimport { set_random_name } from \"./random-name\"\r\n\r\nasync function main() {\r\n  set_random_name();\r\n\r\n  const rs = await init();\r\n  const m = (rs as any).main as CallableFunction;\r\n  m();\r\n}\r\n\r\nmain();\r\n"],
  "mappings": "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",
  "names": ["RoomState", "data", "imports", "decoder", "imports", "event", "i", "TangleState", "tangle", "ret", "ptr", "arg0", "arg1", "module", "imports", "tangle"]
}
